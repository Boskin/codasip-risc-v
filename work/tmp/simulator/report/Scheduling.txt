+========================+===============+================+========================+=========================+===========================+================================+
| Element/Event/Function |      Instance |            HDL | Number of clock cycles | Number of local signals | Number of local registers | Number of local register files |
+========================+===============+================+========================+=========================+===========================+================================+
|             i_hw_alu_i |     id.isa_hw |     i_hw_alu_i |  0 combinatorial logic |                       1 |                         0 |                              0 |
|             i_hw_shift |     id.isa_hw |     i_hw_shift |  0 combinatorial logic |                       1 |                         0 |                              0 |
|             i_hw_store |     id.isa_hw |     i_hw_store |  0 combinatorial logic |                       1 |                         0 |                              0 |
|            i_hw_branch |     id.isa_hw |    i_hw_branch |  0 combinatorial logic |                       1 |                         0 |                              0 |
|            opc_syscall | id.isa_hw.opc |    opc_syscall |  0 combinatorial logic |                       0 |                         0 |                              0 |
|           fe_clear_ctl |  fe_clear_ctl |   fe_clear_ctl |  0 combinatorial logic |                       0 |                         0 |                              0 |
|           i_hw_syscall |     id.isa_hw |   i_hw_syscall |  0 combinatorial logic |                       0 |                         0 |                              0 |
|         i_hw_upper_imm |     id.isa_hw | i_hw_upper_imm |  0 combinatorial logic |                       1 |                         0 |                              0 |
|         print_pipeline |               | print_pipeline |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                     wb |            wb |             wb |  0 combinatorial logic |                       1 |                         0 |                              0 |
|                  reset |               |          reset |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                 isa_hw |     id.isa_hw |         isa_hw |  0 combinatorial logic |                       1 |                         0 |                              0 |
|                 opc_lb | id.isa_hw.opc |         opc_lb |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                 opc_lh | id.isa_hw.opc |         opc_lh |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                 opc_lw | id.isa_hw.opc |         opc_lw |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                 opc_or | id.isa_hw.opc |         opc_or |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                 opc_sb | id.isa_hw.opc |         opc_sb |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                 opc_sh | id.isa_hw.opc |         opc_sh |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                 opc_sw | id.isa_hw.opc |         opc_sw |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_add | id.isa_hw.opc |        opc_add |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_and | id.isa_hw.opc |        opc_and |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_beq | id.isa_hw.opc |        opc_beq |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_bge | id.isa_hw.opc |        opc_bge |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_blt | id.isa_hw.opc |        opc_blt |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_bne | id.isa_hw.opc |        opc_bne |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_jal | id.isa_hw.opc |        opc_jal |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_lbu | id.isa_hw.opc |        opc_lbu |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_lhu | id.isa_hw.opc |        opc_lhu |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_lui | id.isa_hw.opc |        opc_lui |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_ori | id.isa_hw.opc |        opc_ori |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_sll | id.isa_hw.opc |        opc_sll |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_slt | id.isa_hw.opc |        opc_slt |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_sra | id.isa_hw.opc |        opc_sra |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_srl | id.isa_hw.opc |        opc_srl |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_sub | id.isa_hw.opc |        opc_sub |  0 combinatorial logic |                       0 |                         0 |                              0 |
|                opc_xor | id.isa_hw.opc |        opc_xor |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               i_hw_alu |     id.isa_hw |       i_hw_alu |  0 combinatorial logic |                       1 |                         0 |                              0 |
|               i_hw_jal |     id.isa_hw |       i_hw_jal |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_addi | id.isa_hw.opc |       opc_addi |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_andi | id.isa_hw.opc |       opc_andi |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_bgeu | id.isa_hw.opc |       opc_bgeu |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_bltu | id.isa_hw.opc |       opc_bltu |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_halt | id.isa_hw.opc |       opc_halt |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_jalr | id.isa_hw.opc |       opc_jalr |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_slli | id.isa_hw.opc |       opc_slli |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_slti | id.isa_hw.opc |       opc_slti |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_sltu | id.isa_hw.opc |       opc_sltu |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_srai | id.isa_hw.opc |       opc_srai |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_srli | id.isa_hw.opc |       opc_srli |  0 combinatorial logic |                       0 |                         0 |                              0 |
|               opc_xori | id.isa_hw.opc |       opc_xori |  0 combinatorial logic |                       0 |                         0 |                              0 |
|              ex_branch |     ex_branch |      ex_branch |  0 combinatorial logic |                       0 |                         0 |                              0 |
|              ex_output |     ex_output |      ex_output |  0 combinatorial logic |                       0 |                         0 |                              0 |
|              fe_output |     fe_output |      fe_output |  0 combinatorial logic |                       0 |                         0 |                              0 |
|              i_hw_halt |     id.isa_hw |      i_hw_halt |  0 combinatorial logic |                       0 |                         0 |                              0 |
|              i_hw_jalr |     id.isa_hw |      i_hw_jalr |  0 combinatorial logic |                       0 |                         0 |                              0 |
|              i_hw_load |     id.isa_hw |      i_hw_load |  0 combinatorial logic |                       1 |                         0 |                              0 |
|              id_output |     id_output |      id_output |  0 combinatorial logic |                       0 |                         0 |                              0 |
|              me_output |     me_output |      me_output |  0 combinatorial logic |                       0 |                         0 |                              0 |
|              opc_auipc | id.isa_hw.opc |      opc_auipc |  0 combinatorial logic |                       0 |                         0 |                              0 |
|              opc_sltiu | id.isa_hw.opc |      opc_sltiu |  0 combinatorial logic |                       0 |                         0 |                              0 |
|           pipe_control |  pipe_control |   pipe_control |  0 combinatorial logic |                      10 |                         0 |                              0 |
|                     ex |            ex |             ex |  0 combinatorial logic |                       5 |                         0 |                              0 |
|                     fe |            fe |             fe |  0 combinatorial logic |                       1 |                         0 |                              0 |
|                     id |            id |             id |  0 combinatorial logic |                       2 |                         0 |                              0 |
|                     me |            me |             me |  0 combinatorial logic |                       9 |                         0 |                              0 |
|                   main |               |           main |  0 combinatorial logic |                       0 |                         0 |                              0 |
+------------------------+---------------+----------------+------------------------+-------------------------+---------------------------+--------------------------------+

Total Statistics
+======================================+=====+
|                                 Name | Sum |
+======================================+=====+
|     Total number of Sequential Units |   0 |
|  Total number of Combinatorial Units |  66 |
| Total number of local Register Files |   0 |
|      Total number of local Registers |   0 |
|        Total number of local Signals |  36 |
+--------------------------------------+-----+



ex
+===================+==========+=======+============================================================================================================+
|                ID | Bitwidth |  Type |                                                                                                     Detail |
+===================+==========+=======+============================================================================================================+
| codasip_tmp_var_0 |        2 | uint2 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_1 |        2 | uint2 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_2 |        1 | uint1 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_3 |        2 | uint2 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_4 |        4 | uint4 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+-------+------------------------------------------------------------------------------------------------------------+


fe
+===================+==========+======+============================================================================================================+
|                ID | Bitwidth | Type |                                                                                                     Detail |
+===================+==========+======+============================================================================================================+
| codasip_tmp_var_0 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+------+------------------------------------------------------------------------------------------------------------+


i_hw_alu
+===================+==========+========+============================================================================================================+
|                ID | Bitwidth |   Type |                                                                                                     Detail |
+===================+==========+========+============================================================================================================+
| codasip_tmp_var_0 |       17 | uint17 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+--------+------------------------------------------------------------------------------------------------------------+


i_hw_alu_i
+===================+==========+========+============================================================================================================+
|                ID | Bitwidth |   Type |                                                                                                     Detail |
+===================+==========+========+============================================================================================================+
| codasip_tmp_var_0 |       10 | uint10 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+--------+------------------------------------------------------------------------------------------------------------+


i_hw_branch
+===================+==========+========+============================================================================================================+
|                ID | Bitwidth |   Type |                                                                                                     Detail |
+===================+==========+========+============================================================================================================+
| codasip_tmp_var_0 |       10 | uint10 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+--------+------------------------------------------------------------------------------------------------------------+


i_hw_load
+===================+==========+========+============================================================================================================+
|                ID | Bitwidth |   Type |                                                                                                     Detail |
+===================+==========+========+============================================================================================================+
| codasip_tmp_var_0 |       10 | uint10 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+--------+------------------------------------------------------------------------------------------------------------+


i_hw_shift
+===================+==========+========+============================================================================================================+
|                ID | Bitwidth |   Type |                                                                                                     Detail |
+===================+==========+========+============================================================================================================+
| codasip_tmp_var_0 |       17 | uint17 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+--------+------------------------------------------------------------------------------------------------------------+


i_hw_store
+===================+==========+========+============================================================================================================+
|                ID | Bitwidth |   Type |                                                                                                     Detail |
+===================+==========+========+============================================================================================================+
| codasip_tmp_var_0 |       10 | uint10 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+--------+------------------------------------------------------------------------------------------------------------+


i_hw_upper_imm
+===================+==========+=======+============================================================================================================+
|                ID | Bitwidth |  Type |                                                                                                     Detail |
+===================+==========+=======+============================================================================================================+
| codasip_tmp_var_0 |        7 | uint7 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+-------+------------------------------------------------------------------------------------------------------------+


id
+===================+==========+=======+============================================================================================================+
|                ID | Bitwidth |  Type |                                                                                                     Detail |
+===================+==========+=======+============================================================================================================+
| codasip_tmp_var_0 |        7 | uint7 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_1 |        1 |  bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+-------+------------------------------------------------------------------------------------------------------------+


isa_hw
+=============+==========+========+======================================================================================+
|          ID | Bitwidth |   Type |                                                                               Detail |
+=============+==========+========+======================================================================================+
| INSTRUCTION |       17 | uint17 | Signal, created during scheduling of the unit automatically by the Codasip framework |
+-------------+----------+--------+--------------------------------------------------------------------------------------+


me
+===================+==========+========+============================================================================================================+
|                ID | Bitwidth |   Type |                                                                                                     Detail |
+===================+==========+========+============================================================================================================+
|        byte_count |        3 |  uint3 |                       Signal, created during scheduling of the unit automatically by the Codasip framework |
|       request_cmd |        3 |  uint3 |                       Signal, created during scheduling of the unit automatically by the Codasip framework |
| codasip_tmp_var_0 |        4 |  uint4 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_1 |        1 |   bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_2 |        1 |   bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_3 |        1 |   bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_4 |        1 |   bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_5 |        2 |  uint2 | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
|          data_mem |       32 | uint32 |                       Signal, created during scheduling of the unit automatically by the Codasip framework |
+-------------------+----------+--------+------------------------------------------------------------------------------------------------------------+


pipe_control
+===================+==========+======+============================================================================================================+
|                ID | Bitwidth | Type |                                                                                                     Detail |
+===================+==========+======+============================================================================================================+
| codasip_tmp_var_0 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_1 |        1 | bool |                       Signal, created during scheduling of the unit automatically by the Codasip framework |
| codasip_tmp_var_2 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_3 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_4 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_5 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_6 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_7 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_8 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
| codasip_tmp_var_9 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+------+------------------------------------------------------------------------------------------------------------+


wb
+===================+==========+======+============================================================================================================+
|                ID | Bitwidth | Type |                                                                                                     Detail |
+===================+==========+======+============================================================================================================+
| codasip_tmp_var_0 |        1 | bool | Signal, created from condition expressions (if, switch, while, ...) automatically by the Codasip framework |
+-------------------+----------+------+------------------------------------------------------------------------------------------------------------+



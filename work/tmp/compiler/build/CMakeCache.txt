# This is the CMakeCache file.
# For build in directory: c:/Users/Boskin/codasip/RISC_V5/work/tmp/compiler/build
# It was generated by CMake: C:/Codasip/MinGW-1.5.1/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Default URL where bug reports are to be submitted.
BUG_REPORT_URL:STRING=http://llvm.org/bugs/

//Build all libraries as shared libraries instead of static
BUILD_SHARED_LIBS:BOOL=OFF

//Path to a program.
CMAKE_AR:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/ar.exe

//The ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/gcc.exe

//Flags used by the assembler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the assembler during debug builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=-g

//Flags used by the assembler during release minsize builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the assembler during release builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the assembler during Release with Debug Info builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:STRING=Release

//Enable/Disable color output during build.
CMAKE_COLOR_MAKEFILE:BOOL=ON

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/g++.exe

//Flags used by the compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32

//C compiler
CMAKE_C_COMPILER:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/gcc.exe

//Flags used by the compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the compiler during debug builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the compiler during release builds for minimum
// size.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the compiler during release builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the compiler during release builds with debug info.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=-lkernel32 -luser32 -lgdi32 -lwinspool -lshell32 -lole32 -loleaut32 -luuid -lcomdlg32 -ladvapi32

//Flags used by the linker.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Convert GNU import libraries to MS format (requires Visual Studio)
CMAKE_GNUtoMS:BOOL=OFF

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files (x86)/LLVM

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/ld.exe

//Path to a program.
CMAKE_MAKE_PROGRAM:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/make.exe

//Flags used by the linker during the creation of modules.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/nm.exe

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/objcopy.exe

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/objdump.exe

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=LLVM

//Path to a program.
CMAKE_RANLIB:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/ranlib.exe

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/windres.exe

//Flags for Windows Resource Compiler.
CMAKE_RC_FLAGS:STRING=' '

//Flags used by the linker during the creation of dll's.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during debug builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during release minsize builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during release builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during Release with Debug Info builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/strip.exe

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//No help, variable specified on the command line.
CODASIP_INSTALL:PATH=C:/Codasip/Studio-6.8.2/tools

//No help, variable specified on the command line.
CODASIP_OPTIMIZATION:STRING=-O1

//Enable to build 7-Zip packages
CPACK_BINARY_7Z:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=ON

//Enable to build WiX packages
CPACK_BINARY_WIX:BOOL=OFF

//Enable to build ZIP packages
CPACK_BINARY_ZIP:BOOL=OFF

//Enable to build 7-Zip source packages
CPACK_SOURCE_7Z:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=ON

//No help, variable specified on the command line.
CUSTOM_LIB_PATH:PATH=

//Enable debug sources mode (DEBUG_SOURCES)
DEBUG_SOURCES:BOOL=OFF

//Enable evaluation mode (EVALUATION)
EVALUATION:BOOL=OFF

//Additional directory, where CMake should search for ffi.h or
// ffi/ffi.h
FFI_INCLUDE_DIR:PATH=

//Additional directory, where CMake should search for libffi.so
FFI_LIBRARY_DIR:PATH=

//The gold linker
GOLD_EXECUTABLE:FILEPATH=C:/Codasip/MinGW-1.5.1/bin/ld.exe

//Dependencies for target
LLVMCodasipAsmPrinter_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCodasipCodeGen_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCodasipCustomModules_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCodasipDesc_LIB_DEPENDS:STATIC=

//Dependencies for target
LLVMCodasipInfo_LIB_DEPENDS:STATIC=

//Enable abi-breaking checks.  Can be WITH_ASSERTS, FORCE_ON or
// FORCE_OFF.
LLVM_ABI_BREAKING_CHECKS:STRING=WITH_ASSERTS

//Append the version control system revision id to LLVM version
LLVM_APPEND_VC_REV:BOOL=OFF

//Value Computed by CMake
LLVM_BINARY_DIR:STATIC=C:/Users/Boskin/codasip/RISC_V5/work/tmp/compiler/build

//PATH to binutils/include containing plugin-api.h for gold plugin.
LLVM_BINUTILS_INCDIR:PATH=

//Build the llvm documentation.
LLVM_BUILD_DOCS:BOOL=OFF

//Build the LLVM example programs. If OFF, just generate build
// targets.
LLVM_BUILD_EXAMPLES:BOOL=OFF

//Build compiler-rt as an external project.
LLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=OFF

//Experimental: Build GlobalISel
LLVM_BUILD_GLOBAL_ISEL:BOOL=OFF

//Build LLVM and tools with PGO instrumentation (experimental)
LLVM_BUILD_INSTRUMENTED:BOOL=OFF

//Build LLVM and tools with Code Coverage instrumentation (experimental)
LLVM_BUILD_INSTRUMENTED_COVERAGE:BOOL=OFF

//Build libllvm-c re-export library (Darwin Only)
LLVM_BUILD_LLVM_C_DYLIB:BOOL=OFF

//Build libllvm dynamic library
LLVM_BUILD_LLVM_DYLIB:BOOL=OFF

//Build the LLVM runtime libraries.
LLVM_BUILD_RUNTIME:BOOL=ON

//Build LLVM unit tests. If OFF, just generate build targets.
LLVM_BUILD_TESTS:BOOL=OFF

//Build the LLVM tools. If OFF, just generate build targets.
LLVM_BUILD_TOOLS:BOOL=ON

//Build LLVM utility binaries. If OFF, just generate build targets.
LLVM_BUILD_UTILS:BOOL=ON

//Set to ON for a ccache enabled build
LLVM_CCACHE_BUILD:BOOL=OFF

//Default target for which LLVM will generate code.
LLVM_DEFAULT_TARGET_TRIPLE:STRING=i686-pc-mingw32

//Dependency debugging mode to verify correctly expressed library
// dependencies (Darwin only)
LLVM_DEPENDENCY_DEBUGGING:BOOL=OFF

//Disable abi-breaking checks mismatch detection at link-tim.
LLVM_DISABLE_ABI_BREAKING_CHECKS_ENFORCING:BOOL=OFF

//Semicolon-separated list of components to include in libLLVM,
// or "all".
LLVM_DYLIB_COMPONENTS:STRING=all

//Enable assertions
LLVM_ENABLE_ASSERTIONS:BOOL=ON

//Enable embedding backtraces on crash.
LLVM_ENABLE_BACKTRACES:BOOL=ON

//Enable crash overrides.
LLVM_ENABLE_CRASH_OVERRIDES:BOOL=ON

//Compile with C++1y enabled.
LLVM_ENABLE_CXX1Y:BOOL=OFF

//Use doxygen to generate llvm API documentation.
LLVM_ENABLE_DOXYGEN:BOOL=OFF

//Enable Exception handling
LLVM_ENABLE_EH:BOOL=OFF

//Enable expensive checks
LLVM_ENABLE_EXPENSIVE_CHECKS:BOOL=OFF

//Use libffi to call external functions from the interpreter
LLVM_ENABLE_FFI:BOOL=OFF

//Use libc++ if available.
LLVM_ENABLE_LIBCXX:BOOL=OFF

//Use libedit if available.
LLVM_ENABLE_LIBEDIT:BOOL=ON

//Use lld as C and C++ linker.
LLVM_ENABLE_LLD:BOOL=OFF

//Compile with -fmodules-local-submodule-visibility.
LLVM_ENABLE_LOCAL_SUBMODULE_VISIBILITY:BOOL=ON

//Build LLVM with LTO. May be specified as Thin or Full to use
// a particular kind of LTO
LLVM_ENABLE_LTO:STRING=OFF

//Compile with C++ modules enabled.
LLVM_ENABLE_MODULES:BOOL=OFF

//Compile with -gmodules.
LLVM_ENABLE_MODULE_DEBUGGING:BOOL=OFF

//Build OCaml bindings documentation.
LLVM_ENABLE_OCAMLDOC:BOOL=ON

//Compile with pedantic enabled.
LLVM_ENABLE_PEDANTIC:BOOL=ON

//Build Position-Independent Code
LLVM_ENABLE_PIC:BOOL=ON

//Semicolon-separated list of projects to build (clang;libcxx;libcxxabi;lldb;compiler-rt;lld;polly),
// or "all".
LLVM_ENABLE_PROJECTS:STRING=

//Enable run time type information
LLVM_ENABLE_RTTI:BOOL=OFF

//Use Sphinx to generate llvm documentation.
LLVM_ENABLE_SPHINX:BOOL=OFF

//Use terminfo database if available.
LLVM_ENABLE_TERMINFO:BOOL=ON

//Use threads if available.
LLVM_ENABLE_THREADS:BOOL=ON

//Enable compiler warnings.
LLVM_ENABLE_WARNINGS:BOOL=ON

//Fail and stop if a warning is triggered.
LLVM_ENABLE_WERROR:BOOL=OFF

//Use zlib for compression/decompression if available.
LLVM_ENABLE_ZLIB:BOOL=ON

//Semicolon-separated list of experimental targets to build.
LLVM_EXPERIMENTAL_TARGETS_TO_BUILD:STRING=

//Export symbols from LLVM tools so that plugins can import them
LLVM_EXPORT_SYMBOLS_FOR_PLUGINS:BOOL=OFF

//Generate dSYM files and strip executables and libraries (Darwin
// Only)
LLVM_EXTERNALIZE_DEBUGINFO:BOOL=OFF

//Set to ON to force using an old, unsupported host toolchain.
LLVM_FORCE_USE_OLD_HOST_TOOLCHAIN:BOOL=OFF

//Host on which LLVM binaries will run
LLVM_HOST_TRIPLE:STRING=i686-pc-mingw32

//Generate build targets for llvm documentation.
LLVM_INCLUDE_DOCS:BOOL=ON

//Generate build targets for the LLVM examples
LLVM_INCLUDE_EXAMPLES:BOOL=ON

//Include the Go bindings tests in test build targets.
LLVM_INCLUDE_GO_TESTS:BOOL=ON

//Generate build targets for the LLVM unit tests.
LLVM_INCLUDE_TESTS:BOOL=ON

//Generate build targets for the LLVM tools.
LLVM_INCLUDE_TOOLS:BOOL=ON

//Generate build targets for the LLVM utils.
LLVM_INCLUDE_UTILS:BOOL=ON

//Doxygen-generated HTML documentation install directory
LLVM_INSTALL_DOXYGEN_HTML_DIR:STRING=share/doc/llvm/doxygen-html

//OCamldoc-generated HTML documentation install directory
LLVM_INSTALL_OCAMLDOC_HTML_DIR:STRING=share/doc/llvm/ocaml-html

//Only include toolchain files in the 'install' target.
LLVM_INSTALL_TOOLCHAIN_ONLY:BOOL=OFF

//Include utility binaries in the 'install' target.
LLVM_INSTALL_UTILS:BOOL=OFF

//Define suffix of library directory name (32/64)
LLVM_LIBDIR_SUFFIX:STRING=

//Link tools against the libllvm dynamic library
LLVM_LINK_LLVM_DYLIB:BOOL=OFF

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv

//Path to GnuWin32 tools
LLVM_LIT_TOOLS_DIR:PATH=

//Force TableGen to be built with optimization
LLVM_OPTIMIZED_TABLEGEN:BOOL=OFF

//Define the maximum number of concurrent compilation jobs.
LLVM_PARALLEL_COMPILE_JOBS:STRING=

//Define the maximum number of concurrent link jobs.
LLVM_PARALLEL_LINK_JOBS:STRING=

//Build LLVM with Polly
LLVM_POLLY_BUILD:BOOL=ON

//Statically link Polly into tools (if available)
LLVM_POLLY_LINK_INTO_TOOLS:BOOL=ON

//Profiling data file to use when compiling in order to improve
// runtime performance.
LLVM_PROFDATA_FILE:FILEPATH=

//Value Computed by CMake
LLVM_SOURCE_DIR:STATIC=C:/Users/Boskin/codasip/RISC_V5/work/tmp/compiler/llvm

//No help, variable specified on the command line.
LLVM_TABLEGEN_EXE:PATH=C:/Codasip/Studio-6.8.2/tools/bin/llvm-tblgen

//No help, variable specified on the command line.
LLVM_TARGETS_TO_BUILD:STRING=Codasip

//Set target to use for LLVM JIT or use "host" for automatic detection.
LLVM_TARGET_ARCH:STRING=host

//Path for binary subdirectory (defaults to 'bin')
LLVM_TOOLS_INSTALL_DIR:STRING=bin

//Whether to build llc as part of LLVM
LLVM_TOOL_LLC_BUILD:BOOL=ON

//Enable solution folders in Visual Studio. Disable for Express
// versions.
LLVM_USE_FOLDERS:BOOL=ON

//Use Intel JIT API to inform Intel(R) VTune(TM) Amplifier XE 2011
// about JIT code
LLVM_USE_INTEL_JITEVENTS:BOOL=OFF

//Use opagent JIT interface to inform OProfile about JIT code
LLVM_USE_OPROFILE:BOOL=OFF

//Define the sanitizer used to build binaries and tests.
LLVM_USE_SANITIZER:STRING=

//Use -gsplit-dwarf when compiling llvm.
LLVM_USE_SPLIT_DWARF:BOOL=OFF

//Path to a program.
OCAMLFIND:FILEPATH=OCAMLFIND-NOTFOUND

//No help, variable specified on the command line.
PYTHON_EXECUTABLE:PATH=C:/Codasip/Studio-6.8.2/tools/bin/cmdline


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/Boskin/codasip/RISC_V5/work/tmp/compiler/build
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=6
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=2
//ADVANCED property for variable: CMAKE_COLOR_MAKEFILE
CMAKE_COLOR_MAKEFILE-ADVANCED:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Codasip/MinGW-1.5.1/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Codasip/MinGW-1.5.1/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Codasip/MinGW-1.5.1/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=C:/Codasip/MinGW-1.5.1/bin/cmake-gui.exe
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=MSYS Makefiles
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/Boskin/codasip/RISC_V5/work/tmp/compiler/llvm
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=13
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Codasip/MinGW-1.5.1/share/cmake-3.6
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_7Z
CPACK_BINARY_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_WIX
CPACK_BINARY_WIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_ZIP
CPACK_BINARY_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_7Z
CPACK_SOURCE_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG
CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=
//Test CXX_SUPPORTS_CXX11
CXX_SUPPORTS_CXX11:INTERNAL=1
//Test CXX_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG
CXX_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG
CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_STRING_CONVERSION_FLAG
CXX_SUPPORTS_STRING_CONVERSION_FLAG:INTERNAL=
//Test CXX_SUPPORTS_WERROR_DATE_TIME
CXX_SUPPORTS_WERROR_DATE_TIME:INTERNAL=
//Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG
C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=
//Test C_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG
C_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG:INTERNAL=
//Test C_SUPPORTS_STRING_CONVERSION_FLAG
C_SUPPORTS_STRING_CONVERSION_FLAG:INTERNAL=
//Test C_SUPPORTS_WERROR_DATE_TIME
C_SUPPORTS_WERROR_DATE_TIME:INTERNAL=
//Test C_WCOMMENT_ALLOWS_LINE_WRAP
C_WCOMMENT_ALLOWS_LINE_WRAP:INTERNAL=
//Details about finding PythonInterp
FIND_PACKAGE_MESSAGE_DETAILS_PythonInterp:INTERNAL=[C:/Codasip/Studio-6.8.2/tools/bin/cmdline][v2.7.9()]
//Test HAS_MAYBE_UNINITIALIZED
HAS_MAYBE_UNINITIALIZED:INTERNAL=1
//Have symbol backtrace
HAVE_BACKTRACE:INTERNAL=
//Have include CrashReporterClient.h
HAVE_CRASHREPORTERCLIENT_H:INTERNAL=
//Test HAVE_CXX_ATOMICS64_WITHOUT_LIB
HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=1
//Test HAVE_CXX_ATOMICS_WITHOUT_LIB
HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1
//Have symbol arc4random
HAVE_DECL_ARC4RANDOM:INTERNAL=
//Have symbol FE_ALL_EXCEPT
HAVE_DECL_FE_ALL_EXCEPT:INTERNAL=1
//Have symbol FE_INEXACT
HAVE_DECL_FE_INEXACT:INTERNAL=1
//Have symbol strerror_s
HAVE_DECL_STRERROR_S:INTERNAL=
//Have include dirent.h
HAVE_DIRENT_H:INTERNAL=1
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include execinfo.h
HAVE_EXECINFO_H:INTERNAL=
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have include fenv.h
HAVE_FENV_H:INTERNAL=1
//Have symbol futimens
HAVE_FUTIMENS:INTERNAL=
//Have symbol futimes
HAVE_FUTIMES:INTERNAL=
//Have symbol getcwd
HAVE_GETCWD:INTERNAL=1
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=
//Have symbol getrusage
HAVE_GETRUSAGE:INTERNAL=
//Have symbol gettimeofday
HAVE_GETTIMEOFDAY:INTERNAL=1
//Have include histedit.h
HAVE_HISTEDIT_H:INTERNAL=
//Test HAVE_INT64_T
HAVE_INT64_T:INTERNAL=1
//Have include inttypes.h
HAVE_INTTYPES_H:INTERNAL=1
//Have symbol isatty
HAVE_ISATTY:INTERNAL=1
//Have library xar
HAVE_LIBXAR:INTERNAL=
//Have include link.h
HAVE_LINK_H:INTERNAL=
//Have symbol lseek64
HAVE_LSEEK64:INTERNAL=1
//Have include mach/mach.h
HAVE_MACH_MACH_H:INTERNAL=
//Have symbol mallctl
HAVE_MALLCTL:INTERNAL=
//Have symbol mallinfo
HAVE_MALLINFO:INTERNAL=
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=1
//Have include malloc/malloc.h
HAVE_MALLOC_MALLOC_H:INTERNAL=
//Have symbol malloc_zone_statistics
HAVE_MALLOC_ZONE_STATISTICS:INTERNAL=
//Have symbol mkdtemp
HAVE_MKDTEMP:INTERNAL=
//Have symbol mkstemp
HAVE_MKSTEMP:INTERNAL=
//Have symbol mktemp
HAVE_MKTEMP:INTERNAL=1
//Have include ndir.h
HAVE_NDIR_H:INTERNAL=
//Have symbol posix_fallocate
HAVE_POSIX_FALLOCATE:INTERNAL=
//Have symbol posix_spawn
HAVE_POSIX_SPAWN:INTERNAL=
//Have symbol pread
HAVE_PREAD:INTERNAL=
//Have symbol realpath
HAVE_REALPATH:INTERNAL=
//Have symbol sbrk
HAVE_SBRK:INTERNAL=
//Have symbol setenv
HAVE_SETENV:INTERNAL=
//Have symbol setrlimit
HAVE_SETRLIMIT:INTERNAL=
//Have symbol sigaltstack
HAVE_SIGALTSTACK:INTERNAL=
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have include stdint.h
HAVE_STDINT_H:INTERNAL=1
//Have symbol strerror
HAVE_STRERROR:INTERNAL=1
//Have symbol strerror_r
HAVE_STRERROR_R:INTERNAL=
//Have symbol strtoll
HAVE_STRTOLL:INTERNAL=1
//Have symbol sysconf
HAVE_SYSCONF:INTERNAL=
//Have include sys/dir.h
HAVE_SYS_DIR_H:INTERNAL=
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=
//Have include sys/ndir.h
HAVE_SYS_NDIR_H:INTERNAL=
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=1
//Have include sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=1
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include sys/uio.h
HAVE_SYS_UIO_H:INTERNAL=
//Have include termios.h
HAVE_TERMIOS_H:INTERNAL=
//Test HAVE_UINT64_T
HAVE_UINT64_T:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Test HAVE_U_INT64_T
HAVE_U_INT64_T:INTERNAL=
//Have include valgrind/valgrind.h
HAVE_VALGRIND_VALGRIND_H:INTERNAL=
//Have include zlib.h
HAVE_ZLIB_H:INTERNAL=1
//Have function _alloca
HAVE__ALLOCA:INTERNAL=
//Have symbol _chsize_s
HAVE__CHSIZE_S:INTERNAL=
//Have symbol _Unwind_Backtrace
HAVE__UNWIND_BACKTRACE:INTERNAL=1
//Have function __alloca
HAVE___ALLOCA:INTERNAL=1
//Have function __ashldi3
HAVE___ASHLDI3:INTERNAL=
//Have function __ashrdi3
HAVE___ASHRDI3:INTERNAL=
//Have function __chkstk
HAVE___CHKSTK:INTERNAL=
//Have function __chkstk_ms
HAVE___CHKSTK_MS:INTERNAL=
//Have function __cmpdi2
HAVE___CMPDI2:INTERNAL=
//Have function __divdi3
HAVE___DIVDI3:INTERNAL=
//Have function __fixdfdi
HAVE___FIXDFDI:INTERNAL=
//Have function __fixsfdi
HAVE___FIXSFDI:INTERNAL=
//Have function __floatdidf
HAVE___FLOATDIDF:INTERNAL=
//Have function __lshrdi3
HAVE___LSHRDI3:INTERNAL=
//Have function __main
HAVE___MAIN:INTERNAL=1
//Have function __moddi3
HAVE___MODDI3:INTERNAL=
//Have function __udivdi3
HAVE___UDIVDI3:INTERNAL=
//Have function __umoddi3
HAVE___UMODDI3:INTERNAL=
//Have function ___chkstk
HAVE____CHKSTK:INTERNAL=1
//Have function ___chkstk_ms
HAVE____CHKSTK_MS:INTERNAL=1
//For Visual Studio 2013, manually copy natvis files to Documents\Visual
// Studio 2013\Visualizers
LLVM_ADD_NATIVE_VISUALIZERS_TO_SOLUTION:INTERNAL=FALSE
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED
LLVM_BUILD_INSTRUMENTED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED_COVERAGE
LLVM_BUILD_INSTRUMENTED_COVERAGE-ADVANCED:INTERNAL=1
LLVM_CONFIG_HAS_RTTI:INTERNAL=NO
//Test LLVM_HAS_ATOMICS
LLVM_HAS_ATOMICS:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOLS_INSTALL_DIR
LLVM_TOOLS_INSTALL_DIR-ADVANCED:INTERNAL=1
//Have symbol __GLIBC__
LLVM_USING_GLIBC:INTERNAL=
//ADVANCED property for variable: OCAMLFIND
OCAMLFIND-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PYTHON_EXECUTABLE
PYTHON_EXECUTABLE-ADVANCED:INTERNAL=1
//Test SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG
SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG:INTERNAL=
//Test SUPPORTS_VARIADIC_MACROS_FLAG
SUPPORTS_VARIADIC_MACROS_FLAG:INTERNAL=1


#ifndef BUNDLE_GEN_H_
#define BUNDLE_GEN_H_

#include "bundling_int.h"
#include "bundlingunit.h"


namespace codasip {
namespace assembler {


/**
 *  \brief Wrapper function around generated fbundle function, it processes input instructions and
 *         returns content of result's bundling_int
 *  \param[out] res_size usable result size, result's bundling_int could have unused bits
 *  \param[in] inputInstrs instructions to be bundled together by fbundle function
 */
BundlingBitInfo::Content call_fbundle_generated(int& resSize,
    const std::vector<InstrWithFixups>& inputInstrs, const bool bundleAlignEnd,
    const exprval_t currentAddress);

/**
 *  \brief Determines whether fbundle function was generated by assembler generator for bundling
 */
bool has_fbundle_generated();


}   // codasip::assembler
}   // codasip

#endif  // BUNDLE_GEN_H_

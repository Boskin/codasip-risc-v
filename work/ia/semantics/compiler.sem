# 1 "raw_semantics.sem"
# 1 "<built-in>" 1
# 1 "<built-in>" 3
# 318 "<built-in>" 3
# 1 "<command line>" 1
# 1 "<built-in>" 2
# 1 "raw_semantics.sem" 2
# 0 "compiler.sem"

version "2.0.0"
processor RISC_V5.ia
endian little

//'reg' name, bit_width, address
reg rf_xpr, 32, 0
reg rf_xpr, 32, 1
reg rf_xpr, 32, 2
reg rf_xpr, 32, 3
reg rf_xpr, 32, 4
reg rf_xpr, 32, 5
reg rf_xpr, 32, 6
reg rf_xpr, 32, 7
reg rf_xpr, 32, 8
reg rf_xpr, 32, 9
reg rf_xpr, 32, 10
reg rf_xpr, 32, 11
reg rf_xpr, 32, 12
reg rf_xpr, 32, 13
reg rf_xpr, 32, 14
reg rf_xpr, 32, 15
reg rf_xpr, 32, 16
reg rf_xpr, 32, 17
reg rf_xpr, 32, 18
reg rf_xpr, 32, 19
reg rf_xpr, 32, 20
reg rf_xpr, 32, 21
reg rf_xpr, 32, 22
reg rf_xpr, 32, 23
reg rf_xpr, 32, 24
reg rf_xpr, 32, 25
reg rf_xpr, 32, 26
reg rf_xpr, 32, 27
reg rf_xpr, 32, 28
reg rf_xpr, 32, 29
reg rf_xpr, 32, 30
reg rf_xpr, 32, 31
//'reg' class_name, resource_name, bit_width, address, aliased_resource_name, aliased_address, aliased_high_bit, aliased_low_bit
//'regop' class_name, resource_name, bit_width, syntax, address
regop xpr, rf_xpr, 32, "x1", 1
regop xpr, rf_xpr, 32, "x2", 2
regop xpr, rf_xpr, 32, "x3", 3
regop xpr, rf_xpr, 32, "x4", 4
regop xpr, rf_xpr, 32, "x5", 5
regop xpr, rf_xpr, 32, "x6", 6
regop xpr, rf_xpr, 32, "x7", 7
regop xpr, rf_xpr, 32, "x8", 8
regop xpr, rf_xpr, 32, "x9", 9
regop xpr, rf_xpr, 32, "x10", 10
regop xpr, rf_xpr, 32, "x11", 11
regop xpr, rf_xpr, 32, "x12", 12
regop xpr, rf_xpr, 32, "x13", 13
regop xpr, rf_xpr, 32, "x14", 14
regop xpr, rf_xpr, 32, "x15", 15
regop xpr, rf_xpr, 32, "x16", 16
regop xpr, rf_xpr, 32, "x17", 17
regop xpr, rf_xpr, 32, "x18", 18
regop xpr, rf_xpr, 32, "x19", 19
regop xpr, rf_xpr, 32, "x20", 20
regop xpr, rf_xpr, 32, "x21", 21
regop xpr, rf_xpr, 32, "x22", 22
regop xpr, rf_xpr, 32, "x23", 23
regop xpr, rf_xpr, 32, "x24", 24
regop xpr, rf_xpr, 32, "x25", 25
regop xpr, rf_xpr, 32, "x26", 26
regop xpr, rf_xpr, 32, "x27", 27
regop xpr, rf_xpr, 32, "x28", 28
regop xpr, rf_xpr, 32, "x29", 29
regop xpr, rf_xpr, 32, "x30", 30
regop xpr, rf_xpr, 32, "x31", 31

pointer_size = 32
function_result = { rf_xpr(10), rf_xpr(11), rf_xpr(12), rf_xpr(13) }
code_byte_size = 8
function_params = { rf_xpr(10), rf_xpr(11), rf_xpr(12), rf_xpr(13), rf_xpr(14), rf_xpr(15), rf_xpr(16), rf_xpr(17) }
unused_registers = { rf_xpr(6), rf_xpr(28) }
stack_pointer(0) = rf_xpr(2)
base_pointer(0) = rf_xpr(8)
return_address = rf_xpr(1)

schedule_class "sc_load" = { latency = 2, delay_slot = 0, allow_in_delay_slot = 1 }

// 

//+++ Created by LLC-extractor +++

// i_nop_alias
instr i_nop_alias__, ok (0),
{ },
nop();
,
"nop",
0b00000000000000000000000000010011 ,
"",
"el:i_nop_alias",
""
,
{{0}}

// i_halt(opc = opc_halt)
instr i_halt__opc_halt__, extractor_removed,
{ },
,
"halt",
0b00000000000000000000000000111111 ,
"Instruction contains a call to codasip_halt() that is used only for simulator generation. Instruction removed in extractor pass 'Preparing for LLC extractor'.",
"el:i_halt(el:opc_halt)",
""
,
{{0}}

// i_syscall(opc = opc_syscall)
instr i_syscall__opc_syscall__, extractor_removed,
{ },
,
"syscall",
0b00000000011000000000000001011111 ,
"Instruction contains a call to codasip_syscall() that is used only for simulator generation. Instruction removed in extractor pass 'Preparing for LLC extractor'.",
"el:i_syscall(el:opc_syscall)",
""
,
{{0}}

// i_alu(opc = opc_add, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_add__x_0__x_0__x_0__, ok (0),
{ },
,
"add" "x0"~"," "x0"~"," "x0",
0b00000000000000000000000000110011 ,
"",
"el:i_alu(el:opc_add, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_add, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_add__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"add" "x0"~"," "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000000000000110011 ,
"",
"el:i_alu(el:opc_add, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_add, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_add__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"add" "x0"~"," xpr_0~"," "x0",
0b000000000000 xpr_0[4,0] 0b000000000110011 ,
"",
"el:i_alu(el:opc_add, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_add, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_add__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"add" "x0"~"," xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] xpr_0[4,0] 0b000000000110011 ,
"",
"el:i_alu(el:opc_add, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_add, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_add__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"add" xpr_0~"," "x0"~"," "x0",
0b00000000000000000000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_add, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_add, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_add__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"add" xpr_0~"," "x0"~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_add, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_add, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_add__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"add" xpr_0~"," xpr_1~"," "x0",
0b000000000000 xpr_1[4,0] 0b000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_add, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_add, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_add__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_2);
%6 = i32 regop(xpr_1);
%4 = add(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"add" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_add, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_slt, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_slt__x_0__x_0__x_0__, ok (0),
{ },
,
"slt" "x0"~"," "x0"~"," "x0",
0b00000000000000000010000000110011 ,
"",
"el:i_alu(el:opc_slt, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_slt, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_slt__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"slt" "x0"~"," "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000010000000110011 ,
"",
"el:i_alu(el:opc_slt, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_slt, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_slt__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"slt" "x0"~"," xpr_0~"," "x0",
0b000000000000 xpr_0[4,0] 0b010000000110011 ,
"",
"el:i_alu(el:opc_slt, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_slt, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_slt__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"slt" "x0"~"," xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] xpr_0[4,0] 0b010000000110011 ,
"",
"el:i_alu(el:opc_slt, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_slt, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_slt__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"slt" xpr_0~"," "x0"~"," "x0",
0b00000000000000000010 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_slt, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_slt, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_slt__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%6 = i32 regop(xpr_1);
%7 = i32 0;
%5 = setgt(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"slt" xpr_0~"," "x0"~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000010 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_slt, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_slt, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_slt__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 31;
%4 = srl(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"slt" xpr_0~"," xpr_1~"," "x0",
0b000000000000 xpr_1[4,0] 0b010 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_slt, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_slt, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_slt__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%6 = i32 regop(xpr_1);
%7 = i32 regop(xpr_2);
%5 = setlt(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"slt" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b010 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_slt, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sltu, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_sltu__x_0__x_0__x_0__, ok (0),
{ },
,
"sltu" "x0"~"," "x0"~"," "x0",
0b00000000000000000011000000110011 ,
"",
"el:i_alu(el:opc_sltu, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sltu, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_sltu__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sltu" "x0"~"," "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000011000000110011 ,
"",
"el:i_alu(el:opc_sltu, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sltu, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_sltu__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sltu" "x0"~"," xpr_0~"," "x0",
0b000000000000 xpr_0[4,0] 0b011000000110011 ,
"",
"el:i_alu(el:opc_sltu, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sltu, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_sltu__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"sltu" "x0"~"," xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] xpr_0[4,0] 0b011000000110011 ,
"",
"el:i_alu(el:opc_sltu, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sltu, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_sltu__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sltu" xpr_0~"," "x0"~"," "x0",
0b00000000000000000011 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sltu, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sltu, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_sltu__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%6 = i32 regop(xpr_1);
%7 = i32 0;
%5 = setne(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"sltu" xpr_0~"," "x0"~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000011 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sltu, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sltu, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_sltu__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sltu" xpr_0~"," xpr_1~"," "x0",
0b000000000000 xpr_1[4,0] 0b011 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sltu, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sltu, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_sltu__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%6 = i32 regop(xpr_1);
%7 = i32 regop(xpr_2);
%5 = setult(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"sltu" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b011 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sltu, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_and, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_and__x_0__x_0__x_0__, ok (0),
{ },
,
"and" "x0"~"," "x0"~"," "x0",
0b00000000000000000111000000110011 ,
"",
"el:i_alu(el:opc_and, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_and, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_and__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"and" "x0"~"," "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000111000000110011 ,
"",
"el:i_alu(el:opc_and, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_and, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_and__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"and" "x0"~"," xpr_0~"," "x0",
0b000000000000 xpr_0[4,0] 0b111000000110011 ,
"",
"el:i_alu(el:opc_and, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_and, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_and__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"and" "x0"~"," xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] xpr_0[4,0] 0b111000000110011 ,
"",
"el:i_alu(el:opc_and, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_and, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_and__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"and" xpr_0~"," "x0"~"," "x0",
0b00000000000000000111 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_and, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_and, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_and__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"and" xpr_0~"," "x0"~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000111 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_and, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_and, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_and__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"and" xpr_0~"," xpr_1~"," "x0",
0b000000000000 xpr_1[4,0] 0b111 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_and, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_and, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_and__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_2);
%6 = i32 regop(xpr_1);
%4 = and(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"and" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b111 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_and, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_or, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_or__x_0__x_0__x_0__, ok (0),
{ },
,
"or" "x0"~"," "x0"~"," "x0",
0b00000000000000000110000000110011 ,
"",
"el:i_alu(el:opc_or, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_or, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_or__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"or" "x0"~"," "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000110000000110011 ,
"",
"el:i_alu(el:opc_or, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_or, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_or__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"or" "x0"~"," xpr_0~"," "x0",
0b000000000000 xpr_0[4,0] 0b110000000110011 ,
"",
"el:i_alu(el:opc_or, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_or, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_or__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"or" "x0"~"," xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] xpr_0[4,0] 0b110000000110011 ,
"",
"el:i_alu(el:opc_or, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_or, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_or__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"or" xpr_0~"," "x0"~"," "x0",
0b00000000000000000110 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_or, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_or, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_or__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"or" xpr_0~"," "x0"~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000110 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_or, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_or, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_or__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"or" xpr_0~"," xpr_1~"," "x0",
0b000000000000 xpr_1[4,0] 0b110 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_or, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_or, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_or__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_2);
%6 = i32 regop(xpr_1);
%4 = or(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"or" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b110 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_or, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_xor, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_xor__x_0__x_0__x_0__, ok (0),
{ },
,
"xor" "x0"~"," "x0"~"," "x0",
0b00000000000000000100000000110011 ,
"",
"el:i_alu(el:opc_xor, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_xor, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_xor__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"xor" "x0"~"," "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000100000000110011 ,
"",
"el:i_alu(el:opc_xor, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_xor, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_xor__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"xor" "x0"~"," xpr_0~"," "x0",
0b000000000000 xpr_0[4,0] 0b100000000110011 ,
"",
"el:i_alu(el:opc_xor, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_xor, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_xor__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"xor" "x0"~"," xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] xpr_0[4,0] 0b100000000110011 ,
"",
"el:i_alu(el:opc_xor, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_xor, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_xor__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"xor" xpr_0~"," "x0"~"," "x0",
0b00000000000000000100 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_xor, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_xor, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_xor__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"xor" xpr_0~"," "x0"~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000100 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_xor, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_xor, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_xor__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"xor" xpr_0~"," xpr_1~"," "x0",
0b000000000000 xpr_1[4,0] 0b100 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_xor, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_xor, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_xor__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_2);
%6 = i32 regop(xpr_1);
%4 = xor(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"xor" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b100 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_xor, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sll, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_sll__x_0__x_0__x_0__, ok (0),
{ },
,
"sll" "x0"~"," "x0"~"," "x0",
0b00000000000000000001000000110011 ,
"",
"el:i_alu(el:opc_sll, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sll, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_sll__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sll" "x0"~"," "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000001000000110011 ,
"",
"el:i_alu(el:opc_sll, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sll, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_sll__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sll" "x0"~"," xpr_0~"," "x0",
0b000000000000 xpr_0[4,0] 0b001000000110011 ,
"",
"el:i_alu(el:opc_sll, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sll, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_sll__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"sll" "x0"~"," xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] xpr_0[4,0] 0b001000000110011 ,
"",
"el:i_alu(el:opc_sll, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sll, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_sll__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sll" xpr_0~"," "x0"~"," "x0",
0b00000000000000000001 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sll, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sll, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_sll__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sll" xpr_0~"," "x0"~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000001 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sll, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sll, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_sll__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sll" xpr_0~"," xpr_1~"," "x0",
0b000000000000 xpr_1[4,0] 0b001 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sll, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sll, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_sll__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_1);
%7 = i32 regop(xpr_2);
%8 = i32 31;
%6 = and(%7,%8);
%4 = shl(%5,%6);
%9 = i1 -1;
regop(xpr_0) = %4;
,
"sll" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b001 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sll, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_srl, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_srl__x_0__x_0__x_0__, ok (0),
{ },
,
"srl" "x0"~"," "x0"~"," "x0",
0b00000000000000000101000000110011 ,
"",
"el:i_alu(el:opc_srl, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_srl, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_srl__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"srl" "x0"~"," "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000101000000110011 ,
"",
"el:i_alu(el:opc_srl, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_srl, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_srl__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"srl" "x0"~"," xpr_0~"," "x0",
0b000000000000 xpr_0[4,0] 0b101000000110011 ,
"",
"el:i_alu(el:opc_srl, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_srl, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_srl__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"srl" "x0"~"," xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] xpr_0[4,0] 0b101000000110011 ,
"",
"el:i_alu(el:opc_srl, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_srl, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_srl__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"srl" xpr_0~"," "x0"~"," "x0",
0b00000000000000000101 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_srl, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_srl, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_srl__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"srl" xpr_0~"," "x0"~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000101 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_srl, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_srl, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_srl__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"srl" xpr_0~"," xpr_1~"," "x0",
0b000000000000 xpr_1[4,0] 0b101 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_srl, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_srl, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_srl__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_1);
%7 = i32 regop(xpr_2);
%8 = i32 31;
%6 = and(%7,%8);
%4 = srl(%5,%6);
%9 = i1 -1;
regop(xpr_0) = %4;
,
"srl" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b101 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_srl, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sub, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_sub__x_0__x_0__x_0__, ok (0),
{ },
,
"sub" "x0"~"," "x0"~"," "x0",
0b01000000000000000000000000110011 ,
"",
"el:i_alu(el:opc_sub, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sub, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_sub__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sub" "x0"~"," "x0"~"," xpr_0,
0b0100000 xpr_0[4,0] 0b00000000000000110011 ,
"",
"el:i_alu(el:opc_sub, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sub, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_sub__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sub" "x0"~"," xpr_0~"," "x0",
0b010000000000 xpr_0[4,0] 0b000000000110011 ,
"",
"el:i_alu(el:opc_sub, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sub, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_sub__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"sub" "x0"~"," xpr_0~"," xpr_1,
0b0100000 xpr_1[4,0] xpr_0[4,0] 0b000000000110011 ,
"",
"el:i_alu(el:opc_sub, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sub, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_sub__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sub" xpr_0~"," "x0"~"," "x0",
0b01000000000000000000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sub, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sub, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_sub__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%5 = i32 0;
%6 = i32 regop(xpr_1);
%4 = sub(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"sub" xpr_0~"," "x0"~"," xpr_1,
0b0100000 xpr_1[4,0] 0b00000000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sub, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sub, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_sub__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sub" xpr_0~"," xpr_1~"," "x0",
0b010000000000 xpr_1[4,0] 0b000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sub, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sub, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_sub__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 regop(xpr_2);
%4 = sub(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"sub" xpr_0~"," xpr_1~"," xpr_2,
0b0100000 xpr_2[4,0] xpr_1[4,0] 0b000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sub, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sra, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_sra__x_0__x_0__x_0__, ok (0),
{ },
,
"sra" "x0"~"," "x0"~"," "x0",
0b01000000000000000101000000110011 ,
"",
"el:i_alu(el:opc_sra, el:x_0, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sra, xpr_rd = x_0, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_sra__x_0__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sra" "x0"~"," "x0"~"," xpr_0,
0b0100000 xpr_0[4,0] 0b00000101000000110011 ,
"",
"el:i_alu(el:opc_sra, el:x_0, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sra, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_sra__x_0__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sra" "x0"~"," xpr_0~"," "x0",
0b010000000000 xpr_0[4,0] 0b101000000110011 ,
"",
"el:i_alu(el:opc_sra, el:x_0, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sra, xpr_rd = x_0, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_sra__x_0__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
,
"sra" "x0"~"," xpr_0~"," xpr_1,
0b0100000 xpr_1[4,0] xpr_0[4,0] 0b101000000110011 ,
"",
"el:i_alu(el:opc_sra, el:x_0, el:xpr, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sra, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = x_0)
instr i_alu__opc_sra__xpr__x_0__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sra" xpr_0~"," "x0"~"," "x0",
0b01000000000000000101 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sra, el:xpr, el:x_0, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sra, xpr_rd = xpr, xpr_rs1 = x_0, xpr_rs2 = xpr)
instr i_alu__opc_sra__xpr__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sra" xpr_0~"," "x0"~"," xpr_1,
0b0100000 xpr_1[4,0] 0b00000101 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sra, el:xpr, el:x_0, el:xpr)",
""
,
{{0}}

// i_alu(opc = opc_sra, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = x_0)
instr i_alu__opc_sra__xpr__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sra" xpr_0~"," xpr_1~"," "x0",
0b010000000000 xpr_1[4,0] 0b101 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sra, el:xpr, el:xpr, el:x_0)",
""
,
{{0}}

// i_alu(opc = opc_sra, xpr_rd = xpr, xpr_rs1 = xpr, xpr_rs2 = xpr)
instr i_alu__opc_sra__xpr__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_1);
%7 = i32 regop(xpr_2);
%8 = i32 31;
%6 = and(%7,%8);
%4 = sra(%5,%6);
%9 = i1 -1;
regop(xpr_0) = %4;
,
"sra" xpr_0~"," xpr_1~"," xpr_2,
0b0100000 xpr_2[4,0] xpr_1[4,0] 0b101 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sra, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// i_shift(opc = opc_slli, xpr_rd = x_0, xpr_rs1 = x_0, shamt = shamt(val))
instr i_shift__opc_slli__x_0__x_0__shamt__, ok (0),
{ imm_0 = immop() },
,
"slli" "x0"~"," "x0"~"," imm_0,
0b0000000 imm_0[4,0] 0b00000001000000010011 ,
"",
"el:i_shift(el:opc_slli, el:x_0, el:x_0, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_slli, xpr_rd = x_0, xpr_rs1 = xpr, shamt = shamt(val))
instr i_shift__opc_slli__x_0__xpr__shamt__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"slli" "x0"~"," xpr_0~"," imm_1,
0b0000000 imm_1[4,0] xpr_0[4,0] 0b001000000010011 ,
"",
"el:i_shift(el:opc_slli, el:x_0, el:xpr, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_slli, xpr_rd = xpr, xpr_rs1 = x_0, shamt = shamt(val))
instr i_shift__opc_slli__xpr__x_0__shamt__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"slli" xpr_0~"," "x0"~"," imm_1,
0b0000000 imm_1[4,0] 0b00000001 xpr_0[4,0] 0b0010011 ,
"",
"el:i_shift(el:opc_slli, el:xpr, el:x_0, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_slli, xpr_rd = xpr, xpr_rs1 = xpr, shamt = shamt(val))
instr i_shift__opc_slli__xpr__xpr__shamt__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_2,0,5);
%4 = shl(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"slli" xpr_0~"," xpr_1~"," imm_2,
0b0000000 imm_2[4,0] xpr_1[4,0] 0b001 xpr_0[4,0] 0b0010011 ,
"",
"el:i_shift(el:opc_slli, el:xpr, el:xpr, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_srli, xpr_rd = x_0, xpr_rs1 = x_0, shamt = shamt(val))
instr i_shift__opc_srli__x_0__x_0__shamt__, ok (0),
{ imm_0 = immop() },
,
"srli" "x0"~"," "x0"~"," imm_0,
0b0000000 imm_0[4,0] 0b00000101000000010011 ,
"",
"el:i_shift(el:opc_srli, el:x_0, el:x_0, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_srli, xpr_rd = x_0, xpr_rs1 = xpr, shamt = shamt(val))
instr i_shift__opc_srli__x_0__xpr__shamt__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"srli" "x0"~"," xpr_0~"," imm_1,
0b0000000 imm_1[4,0] xpr_0[4,0] 0b101000000010011 ,
"",
"el:i_shift(el:opc_srli, el:x_0, el:xpr, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_srli, xpr_rd = xpr, xpr_rs1 = x_0, shamt = shamt(val))
instr i_shift__opc_srli__xpr__x_0__shamt__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"srli" xpr_0~"," "x0"~"," imm_1,
0b0000000 imm_1[4,0] 0b00000101 xpr_0[4,0] 0b0010011 ,
"",
"el:i_shift(el:opc_srli, el:xpr, el:x_0, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_srli, xpr_rd = xpr, xpr_rs1 = xpr, shamt = shamt(val))
instr i_shift__opc_srli__xpr__xpr__shamt__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_2,0,5);
%4 = srl(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"srli" xpr_0~"," xpr_1~"," imm_2,
0b0000000 imm_2[4,0] xpr_1[4,0] 0b101 xpr_0[4,0] 0b0010011 ,
"",
"el:i_shift(el:opc_srli, el:xpr, el:xpr, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_srai, xpr_rd = x_0, xpr_rs1 = x_0, shamt = shamt(val))
instr i_shift__opc_srai__x_0__x_0__shamt__, ok (0),
{ imm_0 = immop() },
,
"srai" "x0"~"," "x0"~"," imm_0,
0b0100000 imm_0[4,0] 0b00000101000000010011 ,
"",
"el:i_shift(el:opc_srai, el:x_0, el:x_0, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_srai, xpr_rd = x_0, xpr_rs1 = xpr, shamt = shamt(val))
instr i_shift__opc_srai__x_0__xpr__shamt__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"srai" "x0"~"," xpr_0~"," imm_1,
0b0100000 imm_1[4,0] xpr_0[4,0] 0b101000000010011 ,
"",
"el:i_shift(el:opc_srai, el:x_0, el:xpr, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_srai, xpr_rd = xpr, xpr_rs1 = x_0, shamt = shamt(val))
instr i_shift__opc_srai__xpr__x_0__shamt__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"srai" xpr_0~"," "x0"~"," imm_1,
0b0100000 imm_1[4,0] 0b00000101 xpr_0[4,0] 0b0010011 ,
"",
"el:i_shift(el:opc_srai, el:xpr, el:x_0, el:shamt)",
""
,
{{0}}

// i_shift(opc = opc_srai, xpr_rd = xpr, xpr_rs1 = xpr, shamt = shamt(val))
instr i_shift__opc_srai__xpr__xpr__shamt__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_2,0,5);
%4 = sra(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"srai" xpr_0~"," xpr_1~"," imm_2,
0b0100000 imm_2[4,0] xpr_1[4,0] 0b101 xpr_0[4,0] 0b0010011 ,
"",
"el:i_shift(el:opc_srai, el:xpr, el:xpr, el:shamt)",
""
,
{{0}}

// i_alu_i(opc = opc_addi, xpr_rd = x_0, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_addi__x_0__x_0__simm12__, ok (0),
{ imm_0 = immop() },
,
"addi" "x0"~"," "x0"~"," imm_0,
imm_0[11,0] 0b00000000000000010011 ,
"",
"el:i_alu_i(el:opc_addi, el:x_0, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_addi, xpr_rd = x_0, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_addi__x_0__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"addi" "x0"~"," xpr_0~"," imm_1,
imm_1[11,0] xpr_0[4,0] 0b000000000010011 ,
"",
"el:i_alu_i(el:opc_addi, el:x_0, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_addi, xpr_rd = xpr, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_addi__xpr__x_0__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 immop(imm_1,1,12);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"addi" xpr_0~"," "x0"~"," imm_1,
imm_1[11,0] 0b00000000 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_addi, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_addi, xpr_rd = xpr, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_addi__xpr__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_2,1,12);
%4 = add(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"addi" xpr_0~"," xpr_1~"," imm_2,
imm_2[11,0] xpr_1[4,0] 0b000 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_addi, el:xpr, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_slti, xpr_rd = x_0, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_slti__x_0__x_0__simm12__, ok (0),
{ imm_0 = immop() },
,
"slti" "x0"~"," "x0"~"," imm_0,
imm_0[11,0] 0b00000010000000010011 ,
"",
"el:i_alu_i(el:opc_slti, el:x_0, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_slti, xpr_rd = x_0, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_slti__x_0__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"slti" "x0"~"," xpr_0~"," imm_1,
imm_1[11,0] xpr_0[4,0] 0b010000000010011 ,
"",
"el:i_alu_i(el:opc_slti, el:x_0, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_slti, xpr_rd = xpr, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_slti__xpr__x_0__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 immop(imm_1,1,12);
%7 = i32 0;
%5 = setgt(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"slti" xpr_0~"," "x0"~"," imm_1,
imm_1[11,0] 0b00000010 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_slti, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_slti, xpr_rd = xpr, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_slti__xpr__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 regop(xpr_1);
%7 = i32 immop(imm_2,1,12);
%5 = setlt(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"slti" xpr_0~"," xpr_1~"," imm_2,
imm_2[11,0] xpr_1[4,0] 0b010 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_slti, el:xpr, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_sltiu, xpr_rd = x_0, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_sltiu__x_0__x_0__simm12__, ok (0),
{ imm_0 = immop() },
,
"sltiu" "x0"~"," "x0"~"," imm_0,
imm_0[11,0] 0b00000011000000010011 ,
"",
"el:i_alu_i(el:opc_sltiu, el:x_0, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_sltiu, xpr_rd = x_0, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_sltiu__x_0__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"sltiu" "x0"~"," xpr_0~"," imm_1,
imm_1[11,0] xpr_0[4,0] 0b011000000010011 ,
"",
"el:i_alu_i(el:opc_sltiu, el:x_0, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_sltiu, xpr_rd = xpr, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_sltiu__xpr__x_0__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 immop(imm_1,1,12);
%7 = i32 0;
%5 = setne(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"sltiu" xpr_0~"," "x0"~"," imm_1,
imm_1[11,0] 0b00000011 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_sltiu, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_sltiu, xpr_rd = xpr, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_sltiu__xpr__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 regop(xpr_1);
%7 = i32 immop(imm_2,1,12);
%5 = setult(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"sltiu" xpr_0~"," xpr_1~"," imm_2,
imm_2[11,0] xpr_1[4,0] 0b011 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_sltiu, el:xpr, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_andi, xpr_rd = x_0, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_andi__x_0__x_0__simm12__, ok (0),
{ imm_0 = immop() },
,
"andi" "x0"~"," "x0"~"," imm_0,
imm_0[11,0] 0b00000111000000010011 ,
"",
"el:i_alu_i(el:opc_andi, el:x_0, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_andi, xpr_rd = x_0, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_andi__x_0__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"andi" "x0"~"," xpr_0~"," imm_1,
imm_1[11,0] xpr_0[4,0] 0b111000000010011 ,
"",
"el:i_alu_i(el:opc_andi, el:x_0, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_andi, xpr_rd = xpr, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_andi__xpr__x_0__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"andi" xpr_0~"," "x0"~"," imm_1,
imm_1[11,0] 0b00000111 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_andi, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_andi, xpr_rd = xpr, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_andi__xpr__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_2,1,12);
%4 = and(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"andi" xpr_0~"," xpr_1~"," imm_2,
imm_2[11,0] xpr_1[4,0] 0b111 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_andi, el:xpr, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_ori, xpr_rd = x_0, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_ori__x_0__x_0__simm12__, ok (0),
{ imm_0 = immop() },
,
"ori" "x0"~"," "x0"~"," imm_0,
imm_0[11,0] 0b00000110000000010011 ,
"",
"el:i_alu_i(el:opc_ori, el:x_0, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_ori, xpr_rd = x_0, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_ori__x_0__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"ori" "x0"~"," xpr_0~"," imm_1,
imm_1[11,0] xpr_0[4,0] 0b110000000010011 ,
"",
"el:i_alu_i(el:opc_ori, el:x_0, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_ori, xpr_rd = xpr, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_ori__xpr__x_0__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 immop(imm_1,1,12);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"ori" xpr_0~"," "x0"~"," imm_1,
imm_1[11,0] 0b00000110 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_ori, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_ori, xpr_rd = xpr, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_ori__xpr__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_2,1,12);
%4 = or(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"ori" xpr_0~"," xpr_1~"," imm_2,
imm_2[11,0] xpr_1[4,0] 0b110 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_ori, el:xpr, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_xori, xpr_rd = x_0, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_xori__x_0__x_0__simm12__, ok (0),
{ imm_0 = immop() },
,
"xori" "x0"~"," "x0"~"," imm_0,
imm_0[11,0] 0b00000100000000010011 ,
"",
"el:i_alu_i(el:opc_xori, el:x_0, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_xori, xpr_rd = x_0, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_xori__x_0__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"xori" "x0"~"," xpr_0~"," imm_1,
imm_1[11,0] xpr_0[4,0] 0b100000000010011 ,
"",
"el:i_alu_i(el:opc_xori, el:x_0, el:xpr, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_xori, xpr_rd = xpr, xpr_rs1 = x_0, simm = simm12(val))
instr i_alu_i__opc_xori__xpr__x_0__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 immop(imm_1,1,12);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"xori" xpr_0~"," "x0"~"," imm_1,
imm_1[11,0] 0b00000100 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_xori, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// i_alu_i(opc = opc_xori, xpr_rd = xpr, xpr_rs1 = xpr, simm = simm12(val))
instr i_alu_i__opc_xori__xpr__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_2,1,12);
%4 = xor(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"xori" xpr_0~"," xpr_1~"," imm_2,
imm_2[11,0] xpr_1[4,0] 0b100 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_xori, el:xpr, el:xpr, el:simm12)",
""
,
{{0}}

// i_branch(opc = opc_beq, xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_beq__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_0,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"beq" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000000 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_branch(el:opc_beq, el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_beq, xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_beq__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = seteq(%12,%13);
brc(%4,%11);
,
"beq" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000000 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_beq, el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_beq, xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_beq__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = seteq(%12,%13);
brc(%4,%11);
,
"beq" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b000 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_beq, el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_beq, xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_beq__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = seteq(%12,%13);
brc(%4,%11);
,
"beq" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b000 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_beq, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bne, xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_bne__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
,
"bne" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000001 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bne, el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bne, xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_bne__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setne(%12,%13);
brc(%4,%11);
,
"bne" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000001 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bne, el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bne, xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_bne__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setne(%12,%13);
brc(%4,%11);
,
"bne" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b001 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bne, el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bne, xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_bne__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = setne(%12,%13);
brc(%4,%11);
,
"bne" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b001 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bne, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_blt, xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_blt__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
,
"blt" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000100 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_branch(el:opc_blt, el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_blt, xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_blt__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setgt(%12,%13);
brc(%4,%11);
,
"blt" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000100 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_blt, el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_blt, xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_blt__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setlt(%12,%13);
brc(%4,%11);
,
"blt" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b100 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_blt, el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_blt, xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_blt__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = setlt(%12,%13);
brc(%4,%11);
,
"blt" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b100 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_blt, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bltu, xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_bltu__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
,
"bltu" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000110 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bltu, el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bltu, xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_bltu__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setne(%12,%13);
brc(%4,%11);
,
"bltu" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000110 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bltu, el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bltu, xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_bltu__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"bltu" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b110 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bltu, el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bltu, xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_bltu__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = setult(%12,%13);
brc(%4,%11);
,
"bltu" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b110 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bltu, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bge, xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_bge__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_0,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"bge" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000101 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bge, el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bge, xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_bge__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 1;
%11 = setlt(%12,%13);
brc(%4,%11);
,
"bge" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000101 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bge, el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bge, xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_bge__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 -1;
%11 = setgt(%12,%13);
brc(%4,%11);
,
"bge" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b101 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bge, el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bge, xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_bge__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = setge(%12,%13);
brc(%4,%11);
,
"bge" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b101 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bge, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bgeu, xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_bgeu__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_0,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"bgeu" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000111 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bgeu, el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bgeu, xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_bgeu__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = seteq(%12,%13);
brc(%4,%11);
,
"bgeu" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000111 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bgeu, el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bgeu, xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_branch__opc_bgeu__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"bgeu" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b111 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bgeu, el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_branch(opc = opc_bgeu, xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_branch__opc_bgeu__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = setuge(%12,%13);
brc(%4,%11);
,
"bgeu" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b111 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bgeu, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_jal(opc = opc_jal, xpr_rd = x_0, rel_addr = rel_addr20(val))
instr i_jal__opc_jal__x_0__rel_addr20__, ok (0),
{ imm_0 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_0,1,21);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"jal" "x0"~"," imm_0,
imm_0[19] imm_0[9,0] imm_0[10] imm_0[18,11] 0b000001101111 ,
"",
"el:i_jal(el:opc_jal, el:x_0, el:rel_addr20)",
""
,
{{0}}

// i_jal(opc = opc_jal, xpr_rd = xpr, rel_addr = rel_addr20(val))
instr i_jal__opc_jal__xpr__rel_addr20__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 getcurrpc();
%6 = i1 -1;
regop(xpr_0) = %5;
%10 = i32 immop(imm_1,1,21);
%11 = i32 -2;
%9 = and(%10,%11);
%8 = add(%5,%9);
%12 = i32 -4;
%7 = add(%8,%12);
brc(%7,%6);
,
"jal" xpr_0~"," imm_1,
imm_1[19] imm_1[9,0] imm_1[10] imm_1[18,11] xpr_0[4,0] 0b1101111 ,
"",
"el:i_jal(el:opc_jal, el:xpr, el:rel_addr20)",
""
,
{{0}}

// i_jalr(opc = opc_jalr, xpr_rd = x_0, rel_addr = rel_jalr_addr12(val), xpr_rs1 = x_0)
instr i_jalr__opc_jalr__x_0__rel_jalr_addr12__x_0__, ok (0),
{ imm_0 = immop() },
%4 = i32 immop(imm_0,1,12);
%5 = i1 -1;
brc(%4,%5);
,
"jalr" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,0] 0b00000000000001100111 ,
"",
"el:i_jalr(el:opc_jalr, el:x_0, el:rel_jalr_addr12, el:x_0)",
""
,
{{0}}

// i_jalr(opc = opc_jalr, xpr_rd = x_0, rel_addr = rel_jalr_addr12(val), xpr_rs1 = xpr)
instr i_jalr__opc_jalr__x_0__rel_jalr_addr12__xpr__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_0,1,12);
%4 = add(%5,%6);
%7 = i1 -1;
brc(%4,%7);
,
"jalr" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,0] xpr_1[4,0] 0b000000001100111 ,
"",
"el:i_jalr(el:opc_jalr, el:x_0, el:rel_jalr_addr12, el:xpr)",
""
,
{{0}}

// i_jalr(opc = opc_jalr, xpr_rd = xpr, rel_addr = rel_jalr_addr12(val), xpr_rs1 = x_0)
instr i_jalr__opc_jalr__xpr__rel_jalr_addr12__x_0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 getcurrpc();
%6 = i1 -1;
regop(xpr_0) = %5;
%7 = i32 immop(imm_1,1,12);
brc(%7,%6);
,
"jalr" xpr_0~"," imm_1 "(" "x0" ")",
imm_1[11,0] 0b00000000 xpr_0[4,0] 0b1100111 ,
"",
"el:i_jalr(el:opc_jalr, el:xpr, el:rel_jalr_addr12, el:x_0)",
""
,
{{0}}

// i_jalr(opc = opc_jalr, xpr_rd = xpr, rel_addr = rel_jalr_addr12(val), xpr_rs1 = xpr)
instr i_jalr__opc_jalr__xpr__rel_jalr_addr12__xpr__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop(), xpr_2 = regop(xpr) },
%5 = i32 getcurrpc();
%6 = i1 -1;
regop(xpr_0) = %5;
%8 = i32 regop(xpr_2);
%9 = i32 immop(imm_1,1,12);
%7 = add(%8,%9);
brc(%7,%6);
,
"jalr" xpr_0~"," imm_1 "(" xpr_2 ")",
imm_1[11,0] xpr_2[4,0] 0b000 xpr_0[4,0] 0b1100111 ,
"",
"el:i_jalr(el:opc_jalr, el:xpr, el:rel_jalr_addr12, el:xpr)",
""
,
{{0}}

// i_upper_imm(opc = opc_lui, xpr_rd = x_0, simm = simm20(val))
instr i_upper_imm__opc_lui__x_0__simm20__, ok (0),
{ imm_0 = immop() },
,
"lui" "x0"~"," imm_0,
imm_0[19,0] 0b000000110111 ,
"",
"el:i_upper_imm(el:opc_lui, el:x_0, el:simm20)",
""
,
{{0}}

// i_upper_imm(opc = opc_lui, xpr_rd = xpr, simm = simm20(val))
instr i_upper_imm__opc_lui__xpr__simm20__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 immop(imm_1,0,20);
%6 = i32 12;
%4 = shl(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"lui" xpr_0~"," imm_1,
imm_1[19,0] xpr_0[4,0] 0b0110111 ,
"",
"el:i_upper_imm(el:opc_lui, el:xpr, el:simm20)",
""
,
{{0}}

// i_upper_imm(opc = opc_auipc, xpr_rd = x_0, simm = simm20(val))
instr i_upper_imm__opc_auipc__x_0__simm20__, ok (0),
{ imm_0 = immop() },
,
"auipc" "x0"~"," imm_0,
imm_0[19,0] 0b000000010111 ,
"",
"el:i_upper_imm(el:opc_auipc, el:x_0, el:simm20)",
""
,
{{0}}

// i_upper_imm(opc = opc_auipc, xpr_rd = xpr, simm = simm20(val))
instr i_upper_imm__opc_auipc__xpr__simm20__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,0,20);
%9 = i32 12;
%7 = shl(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
regop(xpr_0) = %4;
,
"auipc" xpr_0~"," imm_1,
imm_1[19,0] xpr_0[4,0] 0b0010111 ,
"",
"el:i_upper_imm(el:opc_auipc, el:xpr, el:simm20)",
""
,
{{0}}

// i_load(opc = opc_lb, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lb__x_0__simm12__x_0__, ok (0),
{ imm_0 = immop() },
%4 = i32 immop(imm_0,1,12);
%2 = load(i8, %4, 0);
,
"lb" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,0] 0b00000000000000000011 ,
"",
"el:i_load(el:opc_lb, el:x_0, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lb, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lb__x_0__simm12__xpr__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_0,1,12);
%4 = add(%5,%6);
%2 = load(i8, %4, 0);
,
"lb" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,0] xpr_1[4,0] 0b000000000000011 ,
"",
"el:i_load(el:opc_lb, el:x_0, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lb, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lb__xpr__simm12__x_0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 immop(imm_1,1,12);
%3 = load(i8, %5, 0);
%6 = i32 sign_extend(%3);
%7 = i1 -1;
regop(xpr_0) = %6;
,
"lb" xpr_0~"," imm_1 "(" "x0" ")",
imm_1[11,0] 0b00000000 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lb, el:xpr, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lb, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lb__xpr__simm12__xpr__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop(), xpr_2 = regop(xpr) },
%6 = i32 regop(xpr_2);
%7 = i32 immop(imm_1,1,12);
%5 = add(%6,%7);
%3 = load(i8, %5, 0);
%8 = i32 sign_extend(%3);
%9 = i1 -1;
regop(xpr_0) = %8;
,
"lb" xpr_0~"," imm_1 "(" xpr_2 ")",
imm_1[11,0] xpr_2[4,0] 0b000 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lb, el:xpr, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lh, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lh__x_0__simm12__x_0__, ok (0),
{ imm_0 = immop() },
%4 = i32 immop(imm_0,1,12);
%2 = load(i16, %4, 0);
,
"lh" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,0] 0b00000001000000000011 ,
"",
"el:i_load(el:opc_lh, el:x_0, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lh, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lh__x_0__simm12__xpr__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_0,1,12);
%4 = add(%5,%6);
%2 = load(i16, %4, 0);
,
"lh" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,0] xpr_1[4,0] 0b001000000000011 ,
"",
"el:i_load(el:opc_lh, el:x_0, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lh, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lh__xpr__simm12__x_0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 immop(imm_1,1,12);
%3 = load(i16, %5, 0);
%6 = i32 sign_extend(%3);
%7 = i1 -1;
regop(xpr_0) = %6;
,
"lh" xpr_0~"," imm_1 "(" "x0" ")",
imm_1[11,0] 0b00000001 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lh, el:xpr, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lh, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lh__xpr__simm12__xpr__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop(), xpr_2 = regop(xpr) },
%6 = i32 regop(xpr_2);
%7 = i32 immop(imm_1,1,12);
%5 = add(%6,%7);
%3 = load(i16, %5, 0);
%8 = i32 sign_extend(%3);
%9 = i1 -1;
regop(xpr_0) = %8;
,
"lh" xpr_0~"," imm_1 "(" xpr_2 ")",
imm_1[11,0] xpr_2[4,0] 0b001 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lh, el:xpr, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lw, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lw__x_0__simm12__x_0__, ok (0),
{ imm_0 = immop() },
%4 = i32 immop(imm_0,1,12);
%2 = load(i32, %4, 0);
,
"lw" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,0] 0b00000010000000000011 ,
"",
"el:i_load(el:opc_lw, el:x_0, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lw, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lw__x_0__simm12__xpr__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_0,1,12);
%4 = add(%5,%6);
%2 = load(i32, %4, 0);
,
"lw" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,0] xpr_1[4,0] 0b010000000000011 ,
"",
"el:i_load(el:opc_lw, el:x_0, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lw, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lw__xpr__simm12__x_0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 immop(imm_1,1,12);
%3 = load(i32, %5, 0);
%6 = i1 -1;
regop(xpr_0) = %3;
,
"lw" xpr_0~"," imm_1 "(" "x0" ")",
imm_1[11,0] 0b00000010 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lw, el:xpr, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lw, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lw__xpr__simm12__xpr__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop(), xpr_2 = regop(xpr) },
%6 = i32 regop(xpr_2);
%7 = i32 immop(imm_1,1,12);
%5 = add(%6,%7);
%3 = load(i32, %5, 0);
%8 = i1 -1;
regop(xpr_0) = %3;
,
"lw" xpr_0~"," imm_1 "(" xpr_2 ")",
imm_1[11,0] xpr_2[4,0] 0b010 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lw, el:xpr, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lbu, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lbu__x_0__simm12__x_0__, ok (0),
{ imm_0 = immop() },
%4 = i32 immop(imm_0,1,12);
%2 = load(i8, %4, 0);
,
"lbu" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,0] 0b00000100000000000011 ,
"",
"el:i_load(el:opc_lbu, el:x_0, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lbu, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lbu__x_0__simm12__xpr__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_0,1,12);
%4 = add(%5,%6);
%2 = load(i8, %4, 0);
,
"lbu" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,0] xpr_1[4,0] 0b100000000000011 ,
"",
"el:i_load(el:opc_lbu, el:x_0, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lbu, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lbu__xpr__simm12__x_0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 immop(imm_1,1,12);
%3 = load(i8, %5, 0);
%6 = i32 zero_extend(%3);
%7 = i1 -1;
regop(xpr_0) = %6;
,
"lbu" xpr_0~"," imm_1 "(" "x0" ")",
imm_1[11,0] 0b00000100 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lbu, el:xpr, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lbu, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lbu__xpr__simm12__xpr__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop(), xpr_2 = regop(xpr) },
%6 = i32 regop(xpr_2);
%7 = i32 immop(imm_1,1,12);
%5 = add(%6,%7);
%3 = load(i8, %5, 0);
%8 = i32 zero_extend(%3);
%9 = i1 -1;
regop(xpr_0) = %8;
,
"lbu" xpr_0~"," imm_1 "(" xpr_2 ")",
imm_1[11,0] xpr_2[4,0] 0b100 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lbu, el:xpr, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lhu, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lhu__x_0__simm12__x_0__, ok (0),
{ imm_0 = immop() },
%4 = i32 immop(imm_0,1,12);
%2 = load(i16, %4, 0);
,
"lhu" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,0] 0b00000101000000000011 ,
"",
"el:i_load(el:opc_lhu, el:x_0, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lhu, xpr_rd = x_0, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lhu__x_0__simm12__xpr__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 immop(imm_0,1,12);
%4 = add(%5,%6);
%2 = load(i16, %4, 0);
,
"lhu" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,0] xpr_1[4,0] 0b101000000000011 ,
"",
"el:i_load(el:opc_lhu, el:x_0, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lhu, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = x_0)
instr i_load__opc_lhu__xpr__simm12__x_0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 immop(imm_1,1,12);
%3 = load(i16, %5, 0);
%6 = i32 zero_extend(%3);
%7 = i1 -1;
regop(xpr_0) = %6;
,
"lhu" xpr_0~"," imm_1 "(" "x0" ")",
imm_1[11,0] 0b00000101 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lhu, el:xpr, el:simm12, el:x_0)",
"sc_load"
,
{{0}}

// i_load(opc = opc_lhu, xpr_rd = xpr, simm = simm12(val), xpr_rs1 = xpr)
instr i_load__opc_lhu__xpr__simm12__xpr__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop(), xpr_2 = regop(xpr) },
%6 = i32 regop(xpr_2);
%7 = i32 immop(imm_1,1,12);
%5 = add(%6,%7);
%3 = load(i16, %5, 0);
%8 = i32 zero_extend(%3);
%9 = i1 -1;
regop(xpr_0) = %8;
,
"lhu" xpr_0~"," imm_1 "(" xpr_2 ")",
imm_1[11,0] xpr_2[4,0] 0b101 xpr_0[4,0] 0b0000011 ,
"",
"el:i_load(el:opc_lhu, el:xpr, el:simm12, el:xpr)",
"sc_load"
,
{{0}}

// i_store(opc = opc_sb, xpr_rs2 = x_0, simm = simm12(val), xpr_rs1 = x_0)
instr i_store__opc_sb__x_0__simm12__x_0__, ok (0),
{ imm_0 = immop() },
%4 = i8 0;
%5 = i32 immop(imm_0,1,12);
store(%4, %5, 0);
,
"sb" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,5] 0b0000000000000 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sb, el:x_0, el:simm12, el:x_0)",
""
,
{{0}}

// i_store(opc = opc_sb, xpr_rs2 = x_0, simm = simm12(val), xpr_rs1 = xpr)
instr i_store__opc_sb__x_0__simm12__xpr__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%4 = i8 0;
%6 = i32 regop(xpr_1);
%7 = i32 immop(imm_0,1,12);
%5 = add(%6,%7);
store(%4, %5, 0);
,
"sb" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,5] 0b00000 xpr_1[4,0] 0b000 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sb, el:x_0, el:simm12, el:xpr)",
""
,
{{0}}

// i_store(opc = opc_sb, xpr_rs2 = xpr, simm = simm12(val), xpr_rs1 = x_0)
instr i_store__opc_sb__xpr__simm12__x_0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 regop(xpr_0);
%4 = i8 truncate(%5);
%6 = i32 immop(imm_1,1,12);
store(%4, %6, 0);
,
"sb" xpr_0~"," imm_1 "(" "x0" ")",
imm_1[11,5] xpr_0[4,0] 0b00000000 imm_1[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sb, el:xpr, el:simm12, el:x_0)",
""
,
{{0}}

// i_store(opc = opc_sb, xpr_rs2 = xpr, simm = simm12(val), xpr_rs1 = xpr)
instr i_store__opc_sb__xpr__simm12__xpr__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop(), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_0);
%4 = i8 truncate(%5);
%7 = i32 regop(xpr_2);
%8 = i32 immop(imm_1,1,12);
%6 = add(%7,%8);
store(%4, %6, 0);
,
"sb" xpr_0~"," imm_1 "(" xpr_2 ")",
imm_1[11,5] xpr_0[4,0] xpr_2[4,0] 0b000 imm_1[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sb, el:xpr, el:simm12, el:xpr)",
""
,
{{0}}

// i_store(opc = opc_sh, xpr_rs2 = x_0, simm = simm12(val), xpr_rs1 = x_0)
instr i_store__opc_sh__x_0__simm12__x_0__, ok (0),
{ imm_0 = immop() },
%4 = i16 0;
%5 = i32 immop(imm_0,1,12);
store(%4, %5, 0);
,
"sh" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,5] 0b0000000000001 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sh, el:x_0, el:simm12, el:x_0)",
""
,
{{0}}

// i_store(opc = opc_sh, xpr_rs2 = x_0, simm = simm12(val), xpr_rs1 = xpr)
instr i_store__opc_sh__x_0__simm12__xpr__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%4 = i16 0;
%6 = i32 regop(xpr_1);
%7 = i32 immop(imm_0,1,12);
%5 = add(%6,%7);
store(%4, %5, 0);
,
"sh" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,5] 0b00000 xpr_1[4,0] 0b001 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sh, el:x_0, el:simm12, el:xpr)",
""
,
{{0}}

// i_store(opc = opc_sh, xpr_rs2 = xpr, simm = simm12(val), xpr_rs1 = x_0)
instr i_store__opc_sh__xpr__simm12__x_0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%5 = i32 regop(xpr_0);
%4 = i16 truncate(%5);
%6 = i32 immop(imm_1,1,12);
store(%4, %6, 0);
,
"sh" xpr_0~"," imm_1 "(" "x0" ")",
imm_1[11,5] xpr_0[4,0] 0b00000001 imm_1[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sh, el:xpr, el:simm12, el:x_0)",
""
,
{{0}}

// i_store(opc = opc_sh, xpr_rs2 = xpr, simm = simm12(val), xpr_rs1 = xpr)
instr i_store__opc_sh__xpr__simm12__xpr__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop(), xpr_2 = regop(xpr) },
%5 = i32 regop(xpr_0);
%4 = i16 truncate(%5);
%7 = i32 regop(xpr_2);
%8 = i32 immop(imm_1,1,12);
%6 = add(%7,%8);
store(%4, %6, 0);
,
"sh" xpr_0~"," imm_1 "(" xpr_2 ")",
imm_1[11,5] xpr_0[4,0] xpr_2[4,0] 0b001 imm_1[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sh, el:xpr, el:simm12, el:xpr)",
""
,
{{0}}

// i_store(opc = opc_sw, xpr_rs2 = x_0, simm = simm12(val), xpr_rs1 = x_0)
instr i_store__opc_sw__x_0__simm12__x_0__, ok (0),
{ imm_0 = immop() },
%4 = i32 0;
%5 = i32 immop(imm_0,1,12);
store(%4, %5, 0);
,
"sw" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,5] 0b0000000000010 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sw, el:x_0, el:simm12, el:x_0)",
""
,
{{0}}

// i_store(opc = opc_sw, xpr_rs2 = x_0, simm = simm12(val), xpr_rs1 = xpr)
instr i_store__opc_sw__x_0__simm12__xpr__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%4 = i32 0;
%6 = i32 regop(xpr_1);
%7 = i32 immop(imm_0,1,12);
%5 = add(%6,%7);
store(%4, %5, 0);
,
"sw" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,5] 0b00000 xpr_1[4,0] 0b010 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sw, el:x_0, el:simm12, el:xpr)",
""
,
{{0}}

// i_store(opc = opc_sw, xpr_rs2 = xpr, simm = simm12(val), xpr_rs1 = x_0)
instr i_store__opc_sw__xpr__simm12__x_0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 regop(xpr_0);
%5 = i32 immop(imm_1,1,12);
store(%4, %5, 0);
,
"sw" xpr_0~"," imm_1 "(" "x0" ")",
imm_1[11,5] xpr_0[4,0] 0b00000010 imm_1[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sw, el:xpr, el:simm12, el:x_0)",
""
,
{{0}}

// i_store(opc = opc_sw, xpr_rs2 = xpr, simm = simm12(val), xpr_rs1 = xpr)
instr i_store__opc_sw__xpr__simm12__xpr__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop(), xpr_2 = regop(xpr) },
%4 = i32 regop(xpr_0);
%6 = i32 regop(xpr_2);
%7 = i32 immop(imm_1,1,12);
%5 = add(%6,%7);
store(%4, %5, 0);
,
"sw" xpr_0~"," imm_1 "(" xpr_2 ")",
imm_1[11,5] xpr_0[4,0] xpr_2[4,0] 0b010 imm_1[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sw, el:xpr, el:simm12, el:xpr)",
""
,
{{0}}

// i_li_alias(xpr_rd = x_0, simm = simm12(val))
instr i_li_alias__x_0__simm12__, ok (0),
{ imm_0 = immop() },
,
"li" "x0"~"," imm_0,
imm_0[11,0] 0b00000000000000010011 ,
"",
"el:i_li_alias(el:x_0, el:simm12)",
""
,
{{0}}

// i_li_alias(xpr_rd = xpr, simm = simm12(val))
instr i_li_alias__xpr__simm12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 immop(imm_1,1,12);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"li" xpr_0~"," imm_1,
imm_1[11,0] 0b00000000 xpr_0[4,0] 0b0010011 ,
"",
"el:i_li_alias(el:xpr, el:simm12)",
""
,
{{0}}

// i_mv_alias(xpr_rd = x_0, xpr_rs1 = x_0)
instr i_mv_alias__x_0__x_0__, ok (0),
{ },
,
"mv" "x0"~"," "x0",
0b00000000000000000000000000010011 ,
"",
"el:i_mv_alias(el:x_0, el:x_0)",
""
,
{{0}}

// i_mv_alias(xpr_rd = x_0, xpr_rs1 = xpr)
instr i_mv_alias__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"mv" "x0"~"," xpr_0,
0b000000000000 xpr_0[4,0] 0b000000000010011 ,
"",
"el:i_mv_alias(el:x_0, el:xpr)",
""
,
{{0}}

// i_mv_alias(xpr_rd = xpr, xpr_rs1 = x_0)
instr i_mv_alias__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"mv" xpr_0~"," "x0",
0b00000000000000000000 xpr_0[4,0] 0b0010011 ,
"",
"el:i_mv_alias(el:xpr, el:x_0)",
""
,
{{0}}

// i_mv_alias(xpr_rd = xpr, xpr_rs1 = xpr)
instr i_mv_alias__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%4 = i32 regop(xpr_1);
%5 = i1 -1;
regop(xpr_0) = %4;
,
"mv" xpr_0~"," xpr_1,
0b000000000000 xpr_1[4,0] 0b000 xpr_0[4,0] 0b0010011 ,
"",
"el:i_mv_alias(el:xpr, el:xpr)",
""
,
{{0}}

// i_not_alias(xpr_rd = x_0, xpr_rs1 = x_0)
instr i_not_alias__x_0__x_0__, ok (0),
{ },
,
"not" "x0"~"," "x0",
0b11111111111100000100000000010011 ,
"",
"el:i_not_alias(el:x_0, el:x_0)",
""
,
{{0}}

// i_not_alias(xpr_rd = x_0, xpr_rs1 = xpr)
instr i_not_alias__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"not" "x0"~"," xpr_0,
0b111111111111 xpr_0[4,0] 0b100000000010011 ,
"",
"el:i_not_alias(el:x_0, el:xpr)",
""
,
{{0}}

// i_not_alias(xpr_rd = xpr, xpr_rs1 = x_0)
instr i_not_alias__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 -1;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"not" xpr_0~"," "x0",
0b11111111111100000100 xpr_0[4,0] 0b0010011 ,
"",
"el:i_not_alias(el:xpr, el:x_0)",
""
,
{{0}}

// i_not_alias(xpr_rd = xpr, xpr_rs1 = xpr)
instr i_not_alias__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 -1;
%4 = xor(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"not" xpr_0~"," xpr_1,
0b111111111111 xpr_1[4,0] 0b100 xpr_0[4,0] 0b0010011 ,
"",
"el:i_not_alias(el:xpr, el:xpr)",
""
,
{{0}}

// i_neg_alias(xpr_rd = x_0, xpr_rs2 = x_0)
instr i_neg_alias__x_0__x_0__, ok (0),
{ },
,
"neg" "x0"~"," "x0",
0b01000000000000000000000000110011 ,
"",
"el:i_neg_alias(el:x_0, el:x_0)",
""
,
{{0}}

// i_neg_alias(xpr_rd = x_0, xpr_rs2 = xpr)
instr i_neg_alias__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"neg" "x0"~"," xpr_0,
0b0100000 xpr_0[4,0] 0b00000000000000110011 ,
"",
"el:i_neg_alias(el:x_0, el:xpr)",
""
,
{{0}}

// i_neg_alias(xpr_rd = xpr, xpr_rs2 = x_0)
instr i_neg_alias__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"neg" xpr_0~"," "x0",
0b01000000000000000000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_neg_alias(el:xpr, el:x_0)",
""
,
{{0}}

// i_neg_alias(xpr_rd = xpr, xpr_rs2 = xpr)
instr i_neg_alias__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%5 = i32 0;
%6 = i32 regop(xpr_1);
%4 = sub(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"neg" xpr_0~"," xpr_1,
0b0100000 xpr_1[4,0] 0b00000000 xpr_0[4,0] 0b0110011 ,
"",
"el:i_neg_alias(el:xpr, el:xpr)",
""
,
{{0}}

// i_seqz_alias(xpr_rd = x_0, xpr_rs1 = x_0)
instr i_seqz_alias__x_0__x_0__, ok (0),
{ },
,
"seqz" "x0"~"," "x0",
0b00000000000100000011000000010011 ,
"",
"el:i_seqz_alias(el:x_0, el:x_0)",
""
,
{{0}}

// i_seqz_alias(xpr_rd = x_0, xpr_rs1 = xpr)
instr i_seqz_alias__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"seqz" "x0"~"," xpr_0,
0b000000000001 xpr_0[4,0] 0b011000000010011 ,
"",
"el:i_seqz_alias(el:x_0, el:xpr)",
""
,
{{0}}

// i_seqz_alias(xpr_rd = xpr, xpr_rs1 = x_0)
instr i_seqz_alias__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 1;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"seqz" xpr_0~"," "x0",
0b00000000000100000011 xpr_0[4,0] 0b0010011 ,
"",
"el:i_seqz_alias(el:xpr, el:x_0)",
""
,
{{0}}

// i_seqz_alias(xpr_rd = xpr, xpr_rs1 = xpr)
instr i_seqz_alias__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%6 = i32 regop(xpr_1);
%7 = i32 0;
%5 = seteq(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"seqz" xpr_0~"," xpr_1,
0b000000000001 xpr_1[4,0] 0b011 xpr_0[4,0] 0b0010011 ,
"",
"el:i_seqz_alias(el:xpr, el:xpr)",
""
,
{{0}}

// i_snez_alias(xpr_rd = x_0, xpr_rs1 = x_0)
instr i_snez_alias__x_0__x_0__, ok (0),
{ },
,
"snez" "x0"~"," "x0",
0b00000000000000000011000000110011 ,
"",
"el:i_snez_alias(el:x_0, el:x_0)",
""
,
{{0}}

// i_snez_alias(xpr_rd = x_0, xpr_rs1 = xpr)
instr i_snez_alias__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"snez" "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000011000000110011 ,
"",
"el:i_snez_alias(el:x_0, el:xpr)",
""
,
{{0}}

// i_snez_alias(xpr_rd = xpr, xpr_rs1 = x_0)
instr i_snez_alias__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"snez" xpr_0~"," "x0",
0b00000000000000000011 xpr_0[4,0] 0b0110011 ,
"",
"el:i_snez_alias(el:xpr, el:x_0)",
""
,
{{0}}

// i_snez_alias(xpr_rd = xpr, xpr_rs1 = xpr)
instr i_snez_alias__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%6 = i32 regop(xpr_1);
%7 = i32 0;
%5 = setne(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"snez" xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000011 xpr_0[4,0] 0b0110011 ,
"",
"el:i_snez_alias(el:xpr, el:xpr)",
""
,
{{0}}

// i_sltz_alias(xpr_rd = x_0, xpr_rs1 = x_0)
instr i_sltz_alias__x_0__x_0__, ok (0),
{ },
,
"sltz" "x0"~"," "x0",
0b00000000000000000010000000110011 ,
"",
"el:i_sltz_alias(el:x_0, el:x_0)",
""
,
{{0}}

// i_sltz_alias(xpr_rd = x_0, xpr_rs1 = xpr)
instr i_sltz_alias__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sltz" "x0"~"," xpr_0,
0b000000000000 xpr_0[4,0] 0b010000000110011 ,
"",
"el:i_sltz_alias(el:x_0, el:xpr)",
""
,
{{0}}

// i_sltz_alias(xpr_rd = xpr, xpr_rs1 = x_0)
instr i_sltz_alias__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sltz" xpr_0~"," "x0",
0b00000000000000000010 xpr_0[4,0] 0b0110011 ,
"",
"el:i_sltz_alias(el:xpr, el:x_0)",
""
,
{{0}}

// i_sltz_alias(xpr_rd = xpr, xpr_rs1 = xpr)
instr i_sltz_alias__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%5 = i32 regop(xpr_1);
%6 = i32 31;
%4 = srl(%5,%6);
%7 = i1 -1;
regop(xpr_0) = %4;
,
"sltz" xpr_0~"," xpr_1,
0b000000000000 xpr_1[4,0] 0b010 xpr_0[4,0] 0b0110011 ,
"",
"el:i_sltz_alias(el:xpr, el:xpr)",
""
,
{{0}}

// i_sgtz_alias(xpr_rd = x_0, xpr_rs1 = x_0)
instr i_sgtz_alias__x_0__x_0__, ok (0),
{ },
,
"sgtz" "x0"~"," "x0",
0b00000000000000000010000000110011 ,
"",
"el:i_sgtz_alias(el:x_0, el:x_0)",
""
,
{{0}}

// i_sgtz_alias(xpr_rd = x_0, xpr_rs1 = xpr)
instr i_sgtz_alias__x_0__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
,
"sgtz" "x0"~"," xpr_0,
0b0000000 xpr_0[4,0] 0b00000010000000110011 ,
"",
"el:i_sgtz_alias(el:x_0, el:xpr)",
""
,
{{0}}

// i_sgtz_alias(xpr_rd = xpr, xpr_rs1 = x_0)
instr i_sgtz_alias__xpr__x_0__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sgtz" xpr_0~"," "x0",
0b00000000000000000010 xpr_0[4,0] 0b0110011 ,
"",
"el:i_sgtz_alias(el:xpr, el:x_0)",
""
,
{{0}}

// i_sgtz_alias(xpr_rd = xpr, xpr_rs1 = xpr)
instr i_sgtz_alias__xpr__xpr__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr) },
%6 = i32 regop(xpr_1);
%7 = i32 0;
%5 = setgt(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"sgtz" xpr_0~"," xpr_1,
0b0000000 xpr_1[4,0] 0b00000010 xpr_0[4,0] 0b0110011 ,
"",
"el:i_sgtz_alias(el:xpr, el:xpr)",
""
,
{{0}}

// i_beqz_alias(xpr_rs1 = x_0, rel_addr = rel_addr12(val))
instr i_beqz_alias__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_0,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"beqz" "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000000 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_beqz_alias(el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_beqz_alias(xpr_rs1 = xpr, rel_addr = rel_addr12(val))
instr i_beqz_alias__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = seteq(%12,%13);
brc(%4,%11);
,
"beqz" xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b000 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_beqz_alias(el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bnez_alias(xpr_rs1 = x_0, rel_addr = rel_addr12(val))
instr i_bnez_alias__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
,
"bnez" "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000001 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_bnez_alias(el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bnez_alias(xpr_rs1 = xpr, rel_addr = rel_addr12(val))
instr i_bnez_alias__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setne(%12,%13);
brc(%4,%11);
,
"bnez" xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b001 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bnez_alias(el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_blez_alias(xpr_rs1 = x_0, rel_addr = rel_addr12(val))
instr i_blez_alias__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_0,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"blez" "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000101 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_blez_alias(el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_blez_alias(xpr_rs1 = xpr, rel_addr = rel_addr12(val))
instr i_blez_alias__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 1;
%11 = setlt(%12,%13);
brc(%4,%11);
,
"blez" xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000101 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_blez_alias(el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bgez_alias(xpr_rs1 = x_0, rel_addr = rel_addr12(val))
instr i_bgez_alias__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_0,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"bgez" "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000101 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_bgez_alias(el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bgez_alias(xpr_rs1 = xpr, rel_addr = rel_addr12(val))
instr i_bgez_alias__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 -1;
%11 = setgt(%12,%13);
brc(%4,%11);
,
"bgez" xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b101 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bgez_alias(el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bltz_alias(xpr_rs1 = x_0, rel_addr = rel_addr12(val))
instr i_bltz_alias__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
,
"bltz" "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000100 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_bltz_alias(el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bltz_alias(xpr_rs1 = xpr, rel_addr = rel_addr12(val))
instr i_bltz_alias__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setlt(%12,%13);
brc(%4,%11);
,
"bltz" xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b100 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bltz_alias(el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bgtz_alias(xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_bgtz_alias__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
,
"bgtz" "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000100 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_bgtz_alias(el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bgtz_alias(xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_bgtz_alias__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setgt(%12,%13);
brc(%4,%11);
,
"bgtz" xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000100 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bgtz_alias(el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bgt_alias(xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_bgt_alias__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
,
"bgt" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000100 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_bgt_alias(el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bgt_alias(xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_bgt_alias__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setlt(%12,%13);
brc(%4,%11);
,
"bgt" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b100 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bgt_alias(el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bgt_alias(xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_bgt_alias__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setgt(%12,%13);
brc(%4,%11);
,
"bgt" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000100 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bgt_alias(el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bgt_alias(xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_bgt_alias__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = setgt(%12,%13);
brc(%4,%11);
,
"bgt" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_0[4,0] xpr_1[4,0] 0b100 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_bgt_alias(el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_ble_alias(xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_ble_alias__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_0,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"ble" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000101 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_ble_alias(el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_ble_alias(xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_ble_alias__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 -1;
%11 = setgt(%12,%13);
brc(%4,%11);
,
"ble" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b101 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_ble_alias(el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_ble_alias(xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_ble_alias__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 1;
%11 = setlt(%12,%13);
brc(%4,%11);
,
"ble" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000101 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_ble_alias(el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_ble_alias(xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_ble_alias__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = setle(%12,%13);
brc(%4,%11);
,
"ble" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_0[4,0] xpr_1[4,0] 0b101 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_ble_alias(el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bgtu_alias(xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_bgtu_alias__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
,
"bgtu" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000110 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_bgtu_alias(el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bgtu_alias(xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_bgtu_alias__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"bgtu" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b110 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bgtu_alias(el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bgtu_alias(xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_bgtu_alias__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setne(%12,%13);
brc(%4,%11);
,
"bgtu" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000110 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bgtu_alias(el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bgtu_alias(xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_bgtu_alias__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = setugt(%12,%13);
brc(%4,%11);
,
"bgtu" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_0[4,0] xpr_1[4,0] 0b110 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_bgtu_alias(el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bleu_alias(xpr_rs1 = x_0, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_bleu_alias__x_0__x_0__rel_addr12__, ok (0),
{ imm_0 = immop() },
,
"bleu" "x0"~"," "x0"~"," imm_0,
imm_0[11] imm_0[9,4] 0b0000000000111 imm_0[3,0] imm_0[10] 0b1100011 ,
"",
"el:i_bleu_alias(el:x_0, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bleu_alias(xpr_rs1 = x_0, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_bleu_alias__x_0__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_1,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 0;
%11 = setne(%12,%13);
brc(%4,%11);
,
"bleu" "x0"~"," xpr_0~"," imm_1,
imm_1[11] imm_1[9,4] 0b00000 xpr_0[4,0] 0b111 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bleu_alias(el:x_0, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_bleu_alias(xpr_rs1 = xpr, xpr_rs2 = x_0, rel_addr = rel_addr12(val))
instr i_bleu_alias__xpr__x_0__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
,
"bleu" xpr_0~"," "x0"~"," imm_1,
imm_1[11] imm_1[9,4] xpr_0[4,0] 0b00000111 imm_1[3,0] imm_1[10] 0b1100011 ,
"",
"el:i_bleu_alias(el:xpr, el:x_0, el:rel_addr12)",
""
,
{{0}}

// i_bleu_alias(xpr_rs1 = xpr, xpr_rs2 = xpr, rel_addr = rel_addr12(val))
instr i_bleu_alias__xpr__xpr__rel_addr12__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_0);
%13 = i32 regop(xpr_1);
%11 = setult(%12,%13);
brc(%4,%11);
,
"bleu" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_0[4,0] xpr_1[4,0] 0b111 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_bleu_alias(el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// i_j_alias(rel_addr = rel_addr20(val))
instr i_j_alias__rel_addr20__, ok (0),
{ imm_0 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_0,1,21);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%11 = i1 -1;
brc(%4,%11);
,
"j" imm_0,
imm_0[19] imm_0[9,0] imm_0[10] imm_0[18,11] 0b000001101111 ,
"",
"el:i_j_alias(el:rel_addr20)",
""
,
{{0}}

// i_jr_alias(xpr_rs1 = x_0)
instr i_jr_alias__x_0__, ok (0),
{ },
%4 = i32 0;
%5 = i1 -1;
brc(%4,%5);
,
"jr" "x0",
0b00000000000000000000000001100111 ,
"",
"el:i_jr_alias(el:x_0)",
""
,
{{0}}

// i_jr_alias(xpr_rs1 = xpr)
instr i_jr_alias__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
%4 = i32 regop(xpr_0);
%5 = i1 -1;
brc(%4,%5);
,
"jr" xpr_0,
0b000000000000 xpr_0[4,0] 0b000000001100111 ,
"",
"el:i_jr_alias(el:xpr)",
""
,
{{0}}

// i_ret_alias
instr i_ret_alias__, ok (0),
{ },
%5 = i32 35;
%6 = i32 1;
%4 = i32 reg(rf_xpr, 1);
%7 = i1 -1;
brc(%4,%7);
,
"ret",
0b00000000000000001000000001100111 ,
"",
"el:i_ret_alias",
""
,
{{0}}

// i_call_alias(rel_addr = rel_addr20(val))
instr i_call_alias__rel_addr20__, ok (0),
{ imm_0 = immop() },
%5 = i32 getcurrpc();
%6 = i1 -1;
reg(rf_xpr, 1) = %5;
%10 = i32 immop(imm_0,1,21);
%11 = i32 -2;
%9 = and(%10,%11);
%8 = add(%5,%9);
%12 = i32 -4;
%7 = add(%8,%12);
brc(%7,%6);
,
"call" imm_0,
imm_0[19] imm_0[9,0] imm_0[10] imm_0[18,11] 0b000011101111 ,
"",
"el:i_call_alias(el:rel_addr20)",
""
,
{{0}}

// i_call_reg_alias(xpr_rs1 = x_0)
instr i_call_reg_alias__x_0__, ok (0),
{ },
%5 = i32 getcurrpc();
%6 = i1 -1;
reg(rf_xpr, 1) = %5;
%7 = i32 0;
brc(%7,%6);
,
"call_reg" "x0",
0b00000000000000000000000011100111 ,
"",
"el:i_call_reg_alias(el:x_0)",
""
,
{{0}}

// i_call_reg_alias(xpr_rs1 = xpr)
instr i_call_reg_alias__xpr__, ok (0),
{ xpr_0 = regop(xpr) },
%5 = i32 getcurrpc();
%6 = i1 -1;
reg(rf_xpr, 1) = %5;
%8 = i32 regop(xpr_0);
%9 = i32 -4;
%7 = and(%8,%9);
brc(%7,%6);
,
"call_reg" xpr_0,
0b000000000000 xpr_0[4,0] 0b000000011100111 ,
"",
"el:i_call_reg_alias(el:xpr)",
""
,
{{0}}

emul e_movi32__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 immop(imm_1,0,0);
%5 = i1 -1;
regop(xpr_0) = %4;
,
i_upper_imm__opc_lui__xpr__simm20__ xpr_0 = %0, imm_1 = imm_1 " >> 12 & 0xfffff";
i_alu_i__opc_ori__xpr__x_0__simm12__ xpr_0 = reg(rf_xpr,28), imm_1 = imm_1 " & 0xfff";
i_shift__opc_slli__xpr__xpr__shamt__ xpr_0 = reg(rf_xpr,28), xpr_1 = reg(rf_xpr,28), imm_2 = 20;
i_shift__opc_srli__xpr__xpr__shamt__ xpr_0 = reg(rf_xpr,28), xpr_1 = reg(rf_xpr,28), imm_2 = 20;
i_alu__opc_or__xpr__xpr__xpr__ xpr_0 = xpr_0, xpr_1 = %0, xpr_2 = reg(rf_xpr,28);

// swapped compare   %cmp.i7 = icmp slt i32 %u0, %u1, !dbg !17 to   %cmp.i7 = icmp sgt i32 %u1, %u0, !dbg !17
instr i_alu__opc_slt__xpr__xpr__xpr__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%6 = i32 regop(xpr_2);
%7 = i32 regop(xpr_1);
%5 = setgt(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"slt" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b010 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_slt, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// swapped compare   %cmp3.i = icmp ult i32 %u0, %u1, !dbg !17 to   %cmp3.i = icmp ugt i32 %u1, %u0, !dbg !17
instr i_alu__opc_sltu__xpr__xpr__xpr__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), xpr_2 = regop(xpr) },
%6 = i32 regop(xpr_2);
%7 = i32 regop(xpr_1);
%5 = setugt(%6,%7);
%4 = i32 zero_extend(%5);
%8 = i1 -1;
regop(xpr_0) = %4;
,
"sltu" xpr_0~"," xpr_1~"," xpr_2,
0b0000000 xpr_2[4,0] xpr_1[4,0] 0b011 xpr_0[4,0] 0b0110011 ,
"",
"el:i_alu(el:opc_sltu, el:xpr, el:xpr, el:xpr)",
""
,
{{0}}

// immediate specialization of i_alu_i__opc_slti__xpr__x_0__simm12__
instr i_alu_i__opc_slti__xpr__x_0__simm12__immSpecClone__imm_1__1__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 1;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"slti" xpr_0~"," "x0"~"," "1",
imm_1[11,0] 0b00000010 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_slti, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// immediate specialization of i_alu_i__opc_slti__xpr__x_0__simm12__
instr i_alu_i__opc_slti__xpr__x_0__simm12__immSpecClone__imm_1__0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"slti" xpr_0~"," "x0"~"," "0",
imm_1[11,0] 0b00000010 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_slti, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// immediate specialization of i_alu_i__opc_sltiu__xpr__x_0__simm12__
instr i_alu_i__opc_sltiu__xpr__x_0__simm12__immSpecClone__imm_1__1__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 1;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sltiu" xpr_0~"," "x0"~"," "1",
imm_1[11,0] 0b00000011 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_sltiu, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// immediate specialization of i_alu_i__opc_sltiu__xpr__x_0__simm12__
instr i_alu_i__opc_sltiu__xpr__x_0__simm12__immSpecClone__imm_1__0__, ok (0),
{ xpr_0 = regop(xpr), imm_1 = immop() },
%4 = i32 0;
%5 = i1 -1;
regop(xpr_0) = %4;
,
"sltiu" xpr_0~"," "x0"~"," "0",
imm_1[11,0] 0b00000011 xpr_0[4,0] 0b0010011 ,
"",
"el:i_alu_i(el:opc_sltiu, el:xpr, el:x_0, el:simm12)",
""
,
{{0}}

// swapped compare   %cmp32.i = icmp slt i32 %u0, %u1, !dbg !17 to   %cmp32.i = icmp sgt i32 %u1, %u0, !dbg !17
instr i_branch__opc_blt__xpr__xpr__rel_addr12__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_1);
%13 = i32 regop(xpr_0);
%11 = setgt(%12,%13);
brc(%4,%11);
,
"blt" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b100 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_blt, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// swapped compare   %cmp38.i = icmp ult i32 %u0, %u1, !dbg !17 to   %cmp38.i = icmp ugt i32 %u1, %u0, !dbg !17
instr i_branch__opc_bltu__xpr__xpr__rel_addr12__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_1);
%13 = i32 regop(xpr_0);
%11 = setugt(%12,%13);
brc(%4,%11);
,
"bltu" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b110 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bltu, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// swapped compare   %cmp44.i = icmp sge i32 %u0, %u1, !dbg !17 to   %cmp44.i = icmp sle i32 %u1, %u0, !dbg !17
instr i_branch__opc_bge__xpr__xpr__rel_addr12__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_1);
%13 = i32 regop(xpr_0);
%11 = setle(%12,%13);
brc(%4,%11);
,
"bge" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b101 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bge, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// swapped compare   %cmp50.i = icmp uge i32 %u0, %u1, !dbg !17 to   %cmp50.i = icmp ule i32 %u1, %u0, !dbg !17
instr i_branch__opc_bgeu__xpr__xpr__rel_addr12__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_1);
%13 = i32 regop(xpr_0);
%11 = setule(%12,%13);
brc(%4,%11);
,
"bgeu" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_1[4,0] xpr_0[4,0] 0b111 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_branch(el:opc_bgeu, el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// swapped compare   %cmp = icmp sgt i32 %u0, %u1, !dbg !17 to   %cmp = icmp slt i32 %u1, %u0, !dbg !17
instr i_bgt_alias__xpr__xpr__rel_addr12__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_1);
%13 = i32 regop(xpr_0);
%11 = setlt(%12,%13);
brc(%4,%11);
,
"bgt" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_0[4,0] xpr_1[4,0] 0b100 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_bgt_alias(el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// swapped compare   %cmp = icmp sle i32 %u0, %u1, !dbg !17 to   %cmp = icmp sge i32 %u1, %u0, !dbg !17
instr i_ble_alias__xpr__xpr__rel_addr12__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_1);
%13 = i32 regop(xpr_0);
%11 = setge(%12,%13);
brc(%4,%11);
,
"ble" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_0[4,0] xpr_1[4,0] 0b101 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_ble_alias(el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// swapped compare   %cmp = icmp ugt i32 %u0, %u1, !dbg !17 to   %cmp = icmp ult i32 %u1, %u0, !dbg !17
instr i_bgtu_alias__xpr__xpr__rel_addr12__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_1);
%13 = i32 regop(xpr_0);
%11 = setult(%12,%13);
brc(%4,%11);
,
"bgtu" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_0[4,0] xpr_1[4,0] 0b110 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_bgtu_alias(el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// swapped compare   %cmp = icmp ult i32 %u0, %u1, !dbg !17 to   %cmp = icmp ugt i32 %u1, %u0, !dbg !17
instr i_bleu_alias__xpr__xpr__rel_addr12__swappedCmpClone0__, ok (0),
{ xpr_0 = regop(xpr), xpr_1 = regop(xpr), imm_2 = immop() },
%6 = i32 getcurrpc();
%8 = i32 immop(imm_2,1,13);
%9 = i32 -2;
%7 = and(%8,%9);
%5 = add(%6,%7);
%10 = i32 -4;
%4 = add(%5,%10);
%12 = i32 regop(xpr_1);
%13 = i32 regop(xpr_0);
%11 = setugt(%12,%13);
brc(%4,%11);
,
"bleu" xpr_0~"," xpr_1~"," imm_2,
imm_2[11] imm_2[9,4] xpr_0[4,0] xpr_1[4,0] 0b111 imm_2[3,0] imm_2[10] 0b1100011 ,
"",
"el:i_bleu_alias(el:xpr, el:xpr, el:rel_addr12)",
""
,
{{0}}

// legalized stored constant i8 0 to i32 0
instr i_store__opc_sb__x_0__simm12__x_0__legalConstClonei32__, ok (0),
{ imm_0 = immop() },
%5 = i32 0;
%4 = i8 truncate(%5);
%6 = i32 immop(imm_0,1,12);
store(%4, %6, 0);
,
"sb" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,5] 0b0000000000000 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sb, el:x_0, el:simm12, el:x_0)",
""
,
{{0}}

// legalized stored constant i8 0 to i32 0
instr i_store__opc_sb__x_0__simm12__xpr__legalConstClonei32__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%5 = i32 0;
%4 = i8 truncate(%5);
%7 = i32 regop(xpr_1);
%8 = i32 immop(imm_0,1,12);
%6 = add(%7,%8);
store(%4, %6, 0);
,
"sb" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,5] 0b00000 xpr_1[4,0] 0b000 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sb, el:x_0, el:simm12, el:xpr)",
""
,
{{0}}

// legalized stored constant i16 0 to i32 0
instr i_store__opc_sh__x_0__simm12__x_0__legalConstClonei32__, ok (0),
{ imm_0 = immop() },
%5 = i32 0;
%4 = i16 truncate(%5);
%6 = i32 immop(imm_0,1,12);
store(%4, %6, 0);
,
"sh" "x0"~"," imm_0 "(" "x0" ")",
imm_0[11,5] 0b0000000000001 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sh, el:x_0, el:simm12, el:x_0)",
""
,
{{0}}

// legalized stored constant i16 0 to i32 0
instr i_store__opc_sh__x_0__simm12__xpr__legalConstClonei32__, ok (0),
{ imm_0 = immop(), xpr_1 = regop(xpr) },
%5 = i32 0;
%4 = i16 truncate(%5);
%7 = i32 regop(xpr_1);
%8 = i32 immop(imm_0,1,12);
%6 = add(%7,%8);
store(%4, %6, 0);
,
"sh" "x0"~"," imm_0 "(" xpr_1 ")",
imm_0[11,5] 0b00000 xpr_1[4,0] 0b001 imm_0[4,0] 0b0100011 ,
"",
"el:i_store(el:opc_sh, el:x_0, el:simm12, el:xpr)",
""
,
{{0}}
